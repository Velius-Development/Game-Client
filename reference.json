{
  "name": "DETECTIVE_HEINI",
  "description": "",
  "version": "n/a",
  "classes": [
    {
      "name": "plugin.gd",
      "path": "res://addons/project_map/plugin.gd",
      "extends_class": [
        "EditorPlugin"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class plugin.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "project_map",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var project_map",
          "description": ""
        },
        {
          "name": "project_map_path",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var project_map_path",
          "description": ""
        },
        {
          "name": "project_map_save_path",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var project_map_save_path",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_enter_tree",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _enter_tree()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_exit_tree",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _exit_tree()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _input(event)",
          "description": "",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        },
        {
          "name": "has_main_screen",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func has_main_screen()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "get_plugin_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_plugin_name()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "get_plugin_icon",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_plugin_icon()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "make_visible",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func make_visible(visible)",
          "description": "",
          "arguments": [
            {
              "name": "visible",
              "type": "var"
            }
          ]
        },
        {
          "name": "apply_changes",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func apply_changes()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "save_external_data",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func save_external_data()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "pm_file_node.gd",
      "path": "res://addons/project_map/pm_file_node.gd",
      "extends_class": [
        "GraphNode"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class pm_file_node.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "path",
          "data_type": "String",
          "default_value": "",
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var path: String = \"\"",
          "description": "uses exported variables so that data can be saved"
        },
        {
          "name": "resource_type",
          "data_type": "var",
          "default_value": 0,
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var resource_type = 0",
          "description": ""
        },
        {
          "name": "icon_class",
          "data_type": "var",
          "default_value": "",
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var icon_class = \"\"",
          "description": ""
        },
        {
          "name": "script_path",
          "data_type": "var",
          "default_value": "",
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var script_path = \"\"",
          "description": ""
        },
        {
          "name": "script_name",
          "data_type": "var",
          "default_value": "",
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var script_name = \"\"",
          "description": ""
        },
        {
          "name": "main_resource",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var main_resource",
          "description": ""
        },
        {
          "name": "script_resource",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var script_resource",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "set_selected",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_selected(value)",
          "description": "",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func init(path)",
          "description": "",
          "arguments": [
            {
              "name": "path",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_row_count",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_row_count()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_resource_activated",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_resource_activated(pm_resource)",
          "description": "",
          "arguments": [
            {
              "name": "pm_resource",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "pm_group_node.gd",
      "path": "res://addons/project_map/pm_group_node.gd",
      "extends_class": [
        "GraphNode"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class pm_group_node.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "file_node_script",
          "value": "[GDScript:19559]",
          "data_type": "GDScript",
          "signature": "const file_node_script: GDScript = preload(\"res://addons/project_map/pm_file_node.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "group_name",
          "data_type": "var",
          "default_value": "Group (click to edit)",
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var group_name = \"Group (click to edit)\"",
          "description": ""
        },
        {
          "name": "icon",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var icon",
          "description": ""
        },
        {
          "name": "header",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var header",
          "description": ""
        },
        {
          "name": "drag_offset",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var drag_offset",
          "description": ""
        },
        {
          "name": "drag_nodes",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var drag_nodes",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_enter_tree",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _enter_tree()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "set_selected",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_selected(value)",
          "description": "",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_GraphNode_resize_request",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_GraphNode_resize_request(new_minsize: Vector2)",
          "description": "",
          "arguments": [
            {
              "name": "new_minsize",
              "type": "Vector2"
            }
          ]
        },
        {
          "name": "_on_Title_text_entered",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_Title_text_entered(new_text)",
          "description": "",
          "arguments": [
            {
              "name": "new_text",
              "type": "var"
            }
          ]
        },
        {
          "name": "_on_Title_focus_exited",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_Title_focus_exited()",
          "description": "deselect when validating title",
          "arguments": [

          ]
        },
        {
          "name": "_on_Title_gui_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_Title_gui_input(event)",
          "description": "select text when clicking on title",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_group_nodes",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_group_nodes()",
          "description": "returns all nodes inside a group panel",
          "arguments": [

          ]
        },
        {
          "name": "_on_Icon_gui_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_Icon_gui_input(event)",
          "description": "drag the group node using the icon",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "pm_resource.gd",
      "path": "res://addons/project_map/pm_resource.gd",
      "extends_class": [
        "HBoxContainer"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class pm_resource.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "TYPE_2D",
          "value": 0,
          "data_type": "int",
          "signature": "const TYPE_2D: int = 0",
          "description": ""
        },
        {
          "name": "TYPE_3D",
          "value": 1,
          "data_type": "int",
          "signature": "const TYPE_2D: int = 0",
          "description": ""
        },
        {
          "name": "TYPE_SCRIPT",
          "value": 2,
          "data_type": "int",
          "signature": "const TYPE_2D: int = 0",
          "description": ""
        },
        {
          "name": "TYPE_OTHER",
          "value": 3,
          "data_type": "int",
          "signature": "const TYPE_2D: int = 0",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "resource_path",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var resource_path",
          "description": ""
        },
        {
          "name": "resource_type",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var resource_type",
          "description": ""
        },
        {
          "name": "resource_name",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var resource_name",
          "description": ""
        },
        {
          "name": "icon_class",
          "data_type": "String",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var icon_class: String",
          "description": ""
        },
        {
          "name": "script_path",
          "data_type": "String",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var script_path: String",
          "description": ""
        }
      ],
      "signals": [
        {
          "name": "resource_activated",
          "arguments": [
            "pm_resource"
          ],
          "signature": "signal resource_activated(pm_resource)",
          "description": ""
        }
      ],
      "methods": [
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "set_icon",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_icon(icon_class)",
          "description": "",
          "arguments": [
            {
              "name": "icon_class",
              "type": "var"
            }
          ]
        },
        {
          "name": "set_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_name(resource_path)",
          "description": "",
          "arguments": [
            {
              "name": "resource_path",
              "type": "var"
            }
          ]
        },
        {
          "name": "init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func init(resource_path)",
          "description": "",
          "arguments": [
            {
              "name": "resource_path",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_resource_info",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_resource_info(resource_path)",
          "description": "",
          "arguments": [
            {
              "name": "resource_path",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_resource_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_resource_name(resource_path)",
          "description": "",
          "arguments": [
            {
              "name": "resource_path",
              "type": "var"
            }
          ]
        },
        {
          "name": "_on_Button_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_Button_pressed()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "project_map.gd",
      "path": "res://addons/project_map/project_map.gd",
      "extends_class": [
        "GraphEdit"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class project_map.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "graph_node",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var graph_node",
          "description": ""
        },
        {
          "name": "panel_node",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var panel_node",
          "description": ""
        },
        {
          "name": "panel_node_script",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var panel_node_script",
          "description": ""
        },
        {
          "name": "dirty",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var dirty",
          "description": ""
        },
        {
          "name": "add_panel",
          "data_type": "bool",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var add_panel: bool",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_enter_tree",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _enter_tree()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "snap",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func snap(pos: Vector2)",
          "description": "snap vector to grid",
          "arguments": [
            {
              "name": "pos",
              "type": "Vector2"
            }
          ]
        },
        {
          "name": "_on_add_panel",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_add_panel()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_file_removed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_file_removed(file_path)",
          "description": "",
          "arguments": [
            {
              "name": "file_path",
              "type": "var"
            }
          ]
        },
        {
          "name": "_on_file_moved",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_file_moved(old_file_path, new_file_path)",
          "description": "",
          "arguments": [
            {
              "name": "old_file_path",
              "type": "var"
            },
            {
              "name": "new_file_path",
              "type": "var"
            }
          ]
        },
        {
          "name": "can_drop_data",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func can_drop_data(position, data)",
          "description": "",
          "arguments": [
            {
              "name": "position",
              "type": "var"
            },
            {
              "name": "data",
              "type": "var"
            }
          ]
        },
        {
          "name": "add_node",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func add_node(scn_node, pos)",
          "description": "add node to the graph, snap to grid",
          "arguments": [
            {
              "name": "scn_node",
              "type": "var"
            },
            {
              "name": "pos",
              "type": "var"
            }
          ]
        },
        {
          "name": "drop_data",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func drop_data(pos, data)",
          "description": "",
          "arguments": [
            {
              "name": "pos",
              "type": "var"
            },
            {
              "name": "data",
              "type": "var"
            }
          ]
        },
        {
          "name": "_on_BtnSave_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_BtnSave_pressed()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "save",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func save()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_GraphEdit_delete_nodes_request",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_GraphEdit_delete_nodes_request()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_GraphEdit__end_node_move",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_GraphEdit__end_node_move()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_ProjectMap_gui_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_ProjectMap_gui_input(event)",
          "description": "",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Collection.gd",
      "path": "res://addons/quentincaffeino/array-utils/src/Collection.gd",
      "extends_class": [

      ],
      "extends_file": "Utils.gd",
      "icon": "",
      "signature": "class Collection.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "Iterator",
          "value": "[GDScript:5455]",
          "data_type": "GDScript",
          "signature": "const Iterator: GDScript = preload(\"res://addons/quentincaffeino/iterator/src/Iterator.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_collection",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _collection",
          "description": "@var  Dictionary"
        },
        {
          "name": "_iterationCurrent",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _iterationCurrent",
          "description": "@var  int"
        },
        {
          "name": "length",
          "data_type": "var",
          "default_value": null,
          "setter": "_set_readonly",
          "getter": "length",
          "export": false,
          "signature": "var length",
          "description": "@var  int"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(collection)",
          "description": "@param  Variant  collection",
          "arguments": [
            {
              "name": "collection",
              "type": "var"
            }
          ]
        },
        {
          "name": "replace_collection",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func replace_collection(collection)",
          "description": "@param    Variant  collection\r\n @returns  void",
          "arguments": [
            {
              "name": "collection",
              "type": "var"
            }
          ]
        },
        {
          "name": "set",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set(key, value)",
          "description": "Adds/sets an element in the collection at the index / with the specified key.\r\n @param    Variant  key\r\n @param    Variant  value\r\n @returns  void",
          "arguments": [
            {
              "name": "key",
              "type": "var"
            },
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "add",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func add(value)",
          "description": "Adds an element to the collection.\r\n @param    Variant  value\r\n @returns  void",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "remove",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func remove(key)",
          "description": "Removes an element with a specific key/index from the collection.\r\n @param    Variant  key\r\n @returns  void",
          "arguments": [
            {
              "name": "key",
              "type": "var"
            }
          ]
        },
        {
          "name": "remove_element",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func remove_element(element)",
          "description": "Removes the specified element from the collection, if it is found.\r\n @param    Variant  element\r\n @returns  bool",
          "arguments": [
            {
              "name": "element",
              "type": "var"
            }
          ]
        },
        {
          "name": "remove_by_index",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func remove_by_index(index)",
          "description": "@param    int  index\r\n @returns  void",
          "arguments": [
            {
              "name": "index",
              "type": "var"
            }
          ]
        },
        {
          "name": "contains_key",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func contains_key(key)",
          "description": "Checks whether the collection contains a specific key/index.\r\n @param    Variant  key\r\n @returns  bool",
          "arguments": [
            {
              "name": "key",
              "type": "var"
            }
          ]
        },
        {
          "name": "contains",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func contains(element)",
          "description": "Checks whether the given element is contained in the collection.\r\n Only element values are compared, not keys. The comparison of\r\n two elements is strict, that means not only the value but also\r\n the type must match. For objects this means reference equality.\r\n @param    Variant  element\r\n @returns  bool",
          "arguments": [
            {
              "name": "element",
              "type": "var"
            }
          ]
        },
        {
          "name": "index_of",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func index_of(element)",
          "description": "Searches for a given element and, if found, returns the corresponding\r\n key/index of that element. The comparison of two elements is strict,\r\n that means not only the value but also the type must match.\r\n For objects this means reference equality.\r\n @param    Variant  element\r\n @returns  Variant|null",
          "arguments": [
            {
              "name": "element",
              "type": "var"
            }
          ]
        },
        {
          "name": "get",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get(key)",
          "description": "Gets the element with the given key/index.\r\n @param    Variant  key\r\n @returns  Variant|null",
          "arguments": [
            {
              "name": "key",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_by_index",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_by_index(index)",
          "description": "@param    int  index\r\n @returns  Variant|null",
          "arguments": [
            {
              "name": "index",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_keys",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_keys()",
          "description": "Gets all keys/indexes of the collection elements.\r\n @returns  Variant[]",
          "arguments": [

          ]
        },
        {
          "name": "get_values",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_values()",
          "description": "Gets all elements.\r\n @returns  Variant[]",
          "arguments": [

          ]
        },
        {
          "name": "is_empty",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func is_empty()",
          "description": "Checks whether the collection is empty.\r\n @returns  bool",
          "arguments": [

          ]
        },
        {
          "name": "clear",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func clear()",
          "description": "Clears the collection.\r\n @returns  void",
          "arguments": [

          ]
        },
        {
          "name": "slice",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func slice(offset, length = null)",
          "description": "Extract a slice of `length` elements starting at\r\n position `offset` from the Collection.\r\n @param    int       offset\r\n @param    int|null  length\r\n @returns  Collection",
          "arguments": [
            {
              "name": "offset",
              "type": "var"
            },
            {
              "name": "length",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "fill",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func fill(value = null, startIndex = 0, length = null)",
          "description": "Fill an array with values.\r\n @param    Variant   value\r\n @param    int       startIndex\r\n @param    int|null  length\r\n @returns  Collection",
          "arguments": [
            {
              "name": "value",
              "type": "var",
              "default_value": null
            },
            {
              "name": "startIndex",
              "type": "var",
              "default_value": 0
            },
            {
              "name": "length",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "map",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func map(callback)",
          "description": "@param    AbstractCallback  callback\r\n @returns  Collection",
          "arguments": [
            {
              "name": "callback",
              "type": "var"
            }
          ]
        },
        {
          "name": "filter",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func filter(callback = null)",
          "description": "@param    AbstractCallback|null  callback\r\n @returns  Collection",
          "arguments": [
            {
              "name": "callback",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "first",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func first()",
          "description": "Sets the internal iterator to the first element in the collection and returns this element.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "last",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func last()",
          "description": "Sets the internal iterator to the last element in the collection and returns this element.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "key",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func key()",
          "description": "Gets the current key/index at the current internal iterator position.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "next",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func next()",
          "description": "Moves the internal iterator position to the next element and returns this element.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "previous",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func previous()",
          "description": "Moves the internal iterator position to the previous element and returns this element.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "current",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func current()",
          "description": "Gets the element of the collection at the current internal iterator position.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "get_collection",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_collection()",
          "description": "@returns  Variant",
          "arguments": [

          ]
        },
        {
          "name": "length",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func length()",
          "description": "@returns  int",
          "arguments": [

          ]
        },
        {
          "name": "size",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func size()",
          "description": "@returns  int",
          "arguments": [

          ]
        },
        {
          "name": "_iter_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _iter_init(arg)",
          "description": "@override  _iter_init(?)\r\n @returns  bool",
          "arguments": [
            {
              "name": "arg",
              "type": "var"
            }
          ]
        },
        {
          "name": "_iter_next",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _iter_next(arg)",
          "description": "@override  _iter_next(?)\r\n @returns  bool",
          "arguments": [
            {
              "name": "arg",
              "type": "var"
            }
          ]
        },
        {
          "name": "_iter_get",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _iter_get(arg = null)",
          "description": "@override  _iter_get(?)\r\n @returns  Variant",
          "arguments": [
            {
              "name": "arg",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "get_value_iterator",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_value_iterator()",
          "description": "@returns  Iterator",
          "arguments": [

          ]
        },
        {
          "name": "_set_readonly",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _set_readonly(value)",
          "description": "@returns  void",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "QueueCollection.gd",
      "path": "res://addons/quentincaffeino/array-utils/src/QueueCollection.gd",
      "extends_class": [

      ],
      "extends_file": "./Collection.gd",
      "icon": "",
      "signature": "class QueueCollection.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_max_length",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _max_length",
          "description": "@var  int"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "get_max_length",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_max_length()",
          "description": "@returns  int",
          "arguments": [

          ]
        },
        {
          "name": "set_max_length",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_max_length(max_length)",
          "description": "@param    int  max_length\r\n @returns  QueueCollection",
          "arguments": [
            {
              "name": "max_length",
              "type": "var"
            }
          ]
        },
        {
          "name": "push",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func push(value)",
          "description": "@param    Variant  value\r\n @returns  QueueCollection",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "pop",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func pop()",
          "description": "@returns  Variant",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Utils.gd",
      "path": "res://addons/quentincaffeino/array-utils/src/Utils.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Utils.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [
        {
          "name": "to_array",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func to_array(value)",
          "description": "@param    Variant  value\r\n @returns  Variant[]",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "is_array",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func is_array(value)",
          "description": "@param    Variant  value\r\n @returns  bool",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "to_dict",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func to_dict(value)",
          "description": "@param    Variant  value\r\n @returns  Dictionary",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "flatten",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func flatten(in_array, out_array, depth = -1)",
          "description": "@param    Variant[]  in_array\r\n @param    Variant[]  out_array\r\n @param    int        depth\r\n @returns  Variant[]",
          "arguments": [
            {
              "name": "in_array",
              "type": "var"
            },
            {
              "name": "out_array",
              "type": "var"
            },
            {
              "name": "depth",
              "type": "var",
              "default_value": -1
            }
          ]
        }
      ]
    },
    {
      "name": "errors.en.gd",
      "path": "res://addons/quentincaffeino/callback/assets/translations/errors.en.gd",
      "extends_class": [

      ],
      "extends_file": "",
      "icon": "",
      "signature": "class errors.en.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "messages",
          "value": {
            "qc.callback.target_missing_mv": "qc/callback: ensure: Target is missing method/variable. (%s, %s)",
            "qc.callback.ensure.target_destroyed": "qc/callback: ensure: Failed to call a callback, target was previously destroyed. (%s)",
            "qc.callback.call.ensure_failed": "qc/callback: call: Failed to call a callback, ensuring failed. (%s, %s)",
            "qc.callback.call.unknown_type": "qc/callback: call: Unable to call unknown type. (%s, %s)",
            "qc.callback.canCreate.first_arg": "qc/callback: canCreate: First argument must be target object. Provided: %s.",
            "qc.callback.canCreate.second_arg": "qc/callback: canCreate: Second argument must be variable or method name (string). Provided: %s."
          },
          "data_type": "Dictionary",
          "signature": "class errors.en.gd",
          "description": ""
        }
      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [

      ]
    },
    {
      "name": "AbstractCallback.gd",
      "path": "res://addons/quentincaffeino/callback/src/AbstractCallback.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class AbstractCallback.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "errors",
          "value": {
            "qc.callback.target_missing_mv": "qc/callback: ensure: Target is missing method/variable. (%s, %s)",
            "qc.callback.ensure.target_destroyed": "qc/callback: ensure: Failed to call a callback, target was previously destroyed. (%s)",
            "qc.callback.call.ensure_failed": "qc/callback: call: Failed to call a callback, ensuring failed. (%s, %s)",
            "qc.callback.call.unknown_type": "qc/callback: call: Unable to call unknown type. (%s, %s)",
            "qc.callback.canCreate.first_arg": "qc/callback: canCreate: First argument must be target object. Provided: %s.",
            "qc.callback.canCreate.second_arg": "qc/callback: canCreate: Second argument must be variable or method name (string). Provided: %s."
          },
          "data_type": "Dictionary",
          "signature": "const errors: Dictionary = {\"qc.callback.call.ensure_failed\":\"qc/callback: call: Failed to call a callback, ensuring failed. (%s, %s)\",\"qc.callback.call.unknown_type\":\"qc/callback: call: Unable to call unknown type. (%s, %s)\",\"qc.callback.canCreate.first_arg\":\"qc/callback: canCreate: First argument must be target object. Provided: %s.\",\"qc.callback.canCreate.second_arg\":\"qc/callback: canCreate: Second argument must be variable or method name (string). Provided: %s.\",\"qc.callback.ensure.target_destroyed\":\"qc/callback: ensure: Failed to call a callback, target was previously destroyed. (%s)\",\"qc.callback.target_missing_mv\":\"qc/callback: ensure: Target is missing method/variable. (%s, %s)\"}",
          "description": ""
        },
        {
          "name": "Utils",
          "value": "[GDScript:5457]",
          "data_type": "GDScript",
          "signature": "const Utils: GDScript = preload(\"res://addons/quentincaffeino/callback/src/Utils.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_target",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _target",
          "description": "@var  Reference"
        },
        {
          "name": "_type",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _type",
          "description": "@var  Utils.Type"
        },
        {
          "name": "_bind_argv",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _bind_argv",
          "description": "@var  Variant[]"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(target, type)",
          "description": "@param  Reference   target\r\n @param  Utils.Type  type",
          "arguments": [
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "type",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_target",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_target()",
          "description": "@returns  Reference",
          "arguments": [

          ]
        },
        {
          "name": "get_type",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_type()",
          "description": "@returns  int",
          "arguments": [

          ]
        },
        {
          "name": "ensure",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func ensure()",
          "description": "Ensure callback target exists\r\n @returns  boolean",
          "arguments": [

          ]
        },
        {
          "name": "bind",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func bind(argv)",
          "description": "@param  Variant[]  argv\r\n @returns  void",
          "arguments": [
            {
              "name": "argv",
              "type": "var"
            }
          ]
        },
        {
          "name": "call",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func call(argv)",
          "description": "@param  Variant[]  argv\r\n @returns  Variant",
          "arguments": [
            {
              "name": "argv",
              "type": "var"
            }
          ]
        },
        {
          "name": "_get_args",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _get_args(args)",
          "description": "@param    Variant[]  argv\r\n @returns  Variant[]",
          "arguments": [
            {
              "name": "args",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Callback.gd",
      "path": "res://addons/quentincaffeino/callback/src/Callback.gd",
      "extends_class": [

      ],
      "extends_file": "./AbstractCallback.gd",
      "icon": "",
      "signature": "class Callback.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_name",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _name",
          "description": "@var  String"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(target, name, type)",
          "description": "@param  Reference   target\r\n @param  String      name\r\n @param  Utils.Type  type",
          "arguments": [
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "type",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_name()",
          "description": "@returns  String",
          "arguments": [

          ]
        },
        {
          "name": "ensure",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func ensure()",
          "description": "Ensure callback target exists\r\n @returns  bool",
          "arguments": [

          ]
        },
        {
          "name": "call",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func call(argv)",
          "description": "@param    Variant[]  argv\r\n @returns  Variant",
          "arguments": [
            {
              "name": "argv",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "CallbackBuilder.gd",
      "path": "res://addons/quentincaffeino/callback/src/CallbackBuilder.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class CallbackBuilder.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "errors",
          "value": {
            "qc.callback.target_missing_mv": "qc/callback: ensure: Target is missing method/variable. (%s, %s)",
            "qc.callback.ensure.target_destroyed": "qc/callback: ensure: Failed to call a callback, target was previously destroyed. (%s)",
            "qc.callback.call.ensure_failed": "qc/callback: call: Failed to call a callback, ensuring failed. (%s, %s)",
            "qc.callback.call.unknown_type": "qc/callback: call: Unable to call unknown type. (%s, %s)",
            "qc.callback.canCreate.first_arg": "qc/callback: canCreate: First argument must be target object. Provided: %s.",
            "qc.callback.canCreate.second_arg": "qc/callback: canCreate: Second argument must be variable or method name (string). Provided: %s."
          },
          "data_type": "Dictionary",
          "signature": "const errors: Dictionary = {\"qc.callback.call.ensure_failed\":\"qc/callback: call: Failed to call a callback, ensuring failed. (%s, %s)\",\"qc.callback.call.unknown_type\":\"qc/callback: call: Unable to call unknown type. (%s, %s)\",\"qc.callback.canCreate.first_arg\":\"qc/callback: canCreate: First argument must be target object. Provided: %s.\",\"qc.callback.canCreate.second_arg\":\"qc/callback: canCreate: Second argument must be variable or method name (string). Provided: %s.\",\"qc.callback.ensure.target_destroyed\":\"qc/callback: ensure: Failed to call a callback, target was previously destroyed. (%s)\",\"qc.callback.target_missing_mv\":\"qc/callback: ensure: Target is missing method/variable. (%s, %s)\"}",
          "description": ""
        },
        {
          "name": "Utils",
          "value": "[GDScript:5457]",
          "data_type": "GDScript",
          "signature": "const Utils: GDScript = preload(\"res://addons/quentincaffeino/callback/src/Utils.gd\")",
          "description": ""
        },
        {
          "name": "FuncRefCallback",
          "value": "[GDScript:5461]",
          "data_type": "GDScript",
          "signature": "const FuncRefCallback: GDScript = preload(\"res://addons/quentincaffeino/callback/src/FuncRefCallback.gd\")",
          "description": ""
        },
        {
          "name": "Callback",
          "value": "[GDScript:5458]",
          "data_type": "GDScript",
          "signature": "const Callback: GDScript = preload(\"res://addons/quentincaffeino/callback/src/Callback.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_target",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _target",
          "description": "@var  Reference"
        },
        {
          "name": "_name",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _name",
          "description": "@var  String|null"
        },
        {
          "name": "_type",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _type",
          "description": "@var  int"
        },
        {
          "name": "_bind_argv",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _bind_argv",
          "description": "@var  Variant[]"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(target)",
          "description": "@param  Reference  target",
          "arguments": [
            {
              "name": "target",
              "type": "var"
            }
          ]
        },
        {
          "name": "set_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_name(name)",
          "description": "@param    String  name\r\n @returns  CallbackBuilder",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_name()",
          "description": "@returns  String",
          "arguments": [

          ]
        },
        {
          "name": "set_variable",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_variable(name)",
          "description": "@param    String  name\r\n @returns  CallbackBuilder",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            }
          ]
        },
        {
          "name": "set_method",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_method(name)",
          "description": "@param    String  name\r\n @returns  CallbackBuilder",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            }
          ]
        },
        {
          "name": "set_type",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_type(type)",
          "description": "@param    int  type\r\n @returns  CallbackBuilder",
          "arguments": [
            {
              "name": "type",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_type",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_type()",
          "description": "@returns  int",
          "arguments": [

          ]
        },
        {
          "name": "bind",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func bind(argv)",
          "description": "@param    Variant[]  argv\r\n @returns  CallbackBuilder",
          "arguments": [
            {
              "name": "argv",
              "type": "var"
            }
          ]
        },
        {
          "name": "build",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func build()",
          "description": "@returns  Callback|null",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "FuncRefCallback.gd",
      "path": "res://addons/quentincaffeino/callback/src/FuncRefCallback.gd",
      "extends_class": [

      ],
      "extends_file": "./AbstractCallback.gd",
      "icon": "",
      "signature": "class FuncRefCallback.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(target)",
          "description": "@param  FuncRef  target",
          "arguments": [
            {
              "name": "target",
              "type": "var"
            }
          ]
        },
        {
          "name": "ensure",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func ensure()",
          "description": "Ensure callback target exists\r\n @returns  bool",
          "arguments": [

          ]
        },
        {
          "name": "call",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func call(argv)",
          "description": "@param    Variant[]  argv\r\n @returns  Variant",
          "arguments": [
            {
              "name": "argv",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Utils.gd",
      "path": "res://addons/quentincaffeino/callback/src/Utils.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Utils.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "Type",
          "value": {
            "UNKNOWN": 0,
            "VARIABLE": 1,
            "METHOD": 2
          },
          "data_type": "Dictionary",
          "signature": "const Type: Dictionary = {\"METHOD\":2,\"UNKNOWN\":0,\"VARIABLE\":1}",
          "description": ""
        }
      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [
        {
          "name": "get_type",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_type(target, name)",
          "description": "@param    Reference  target\r\n @param    String     name\r\n @returns  int",
          "arguments": [
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "name",
              "type": "var"
            }
          ]
        },
        {
          "name": "is_funcref",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func is_funcref(obj)",
          "description": "@param    Reference  obj\r\n @returns  bool",
          "arguments": [
            {
              "name": "obj",
              "type": "var"
            }
          ]
        }
      ]
    },
    {
      "name": "DefaultActions.gd",
      "path": "res://addons/quentincaffeino/console/DefaultActions.gd",
      "extends_class": [

      ],
      "extends_file": "",
      "icon": "",
      "signature": "class DefaultActions.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "CONSOLE_TOGGLE",
          "value": "quentincaffeino_console_toggle",
          "data_type": "String",
          "signature": "const CONSOLE_TOGGLE: String = \"quentincaffeino_console_toggle\"",
          "description": "@const  String"
        },
        {
          "name": "console_toggle_props",
          "value": {
            "name": "quentincaffeino_console_toggle",
            "events": [
              {
                "scancode": 96
              }
            ]
          },
          "data_type": "Dictionary",
          "signature": "const console_toggle_props: Dictionary = {\"events\":[{\"scancode\":96}],\"name\":\"quentincaffeino_console_toggle\"}",
          "description": "@const  Dictionary"
        },
        {
          "name": "CONSOLE_AUTOCOMPLETE",
          "value": "quentincaffeino_console_autocomplete",
          "data_type": "String",
          "signature": "const CONSOLE_AUTOCOMPLETE: String = \"quentincaffeino_console_autocomplete\"",
          "description": "@const  String"
        },
        {
          "name": "console_autocomplete_props",
          "value": {
            "name": "quentincaffeino_console_autocomplete",
            "events": [
              {
                "scancode": 16777218
              }
            ]
          },
          "data_type": "Dictionary",
          "signature": "const console_autocomplete_props: Dictionary = {\"events\":[{\"scancode\":16777218}],\"name\":\"quentincaffeino_console_autocomplete\"}",
          "description": "@const  Dictionary"
        },
        {
          "name": "console_history_up_props",
          "value": {
            "name": "quentincaffeino_console_history_up",
            "events": [
              {
                "scancode": 16777232
              }
            ]
          },
          "data_type": "Dictionary",
          "signature": "const console_history_up_props: Dictionary = {\"events\":[{\"scancode\":16777232}],\"name\":\"quentincaffeino_console_history_up\"}",
          "description": "@const  Dictionary"
        },
        {
          "name": "CONSOLE_HISTORY_UP",
          "value": "quentincaffeino_console_history_up",
          "data_type": "String",
          "signature": "const CONSOLE_HISTORY_UP: String = \"quentincaffeino_console_history_up\"",
          "description": "@const  String"
        },
        {
          "name": "console_history_down_props",
          "value": {
            "name": "quentincaffeino_console_history_down",
            "events": [
              {
                "scancode": 16777234
              }
            ]
          },
          "data_type": "Dictionary",
          "signature": "const console_history_down_props: Dictionary = {\"events\":[{\"scancode\":16777234}],\"name\":\"quentincaffeino_console_history_down\"}",
          "description": "@const  Dictionary"
        },
        {
          "name": "CONSOLE_HISTORY_DOWN",
          "value": "quentincaffeino_console_history_down",
          "data_type": "String",
          "signature": "const CONSOLE_HISTORY_DOWN: String = \"quentincaffeino_console_history_down\"",
          "description": "@const  String"
        }
      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [

      ]
    },
    {
      "name": "plugin.gd",
      "path": "res://addons/quentincaffeino/console/plugin.gd",
      "extends_class": [
        "EditorPlugin"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class plugin.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "DefaultActions",
          "value": "[GDScript:5453]",
          "data_type": "GDScript",
          "signature": "const DefaultActions: GDScript = preload(\"res://addons/quentincaffeino/console/DefaultActions.gd\")",
          "description": ""
        },
        {
          "name": "PLUGIN_NAME",
          "value": "Console",
          "data_type": "String",
          "signature": "const PLUGIN_NAME: String = \"Console\"",
          "description": ""
        },
        {
          "name": "ACTIONS",
          "value": [
            {
              "name": "quentincaffeino_console_toggle",
              "events": [
                {
                  "scancode": 96
                }
              ]
            },
            {
              "name": "quentincaffeino_console_autocomplete",
              "events": [
                {
                  "scancode": 16777218
                }
              ]
            },
            {
              "name": "quentincaffeino_console_history_up",
              "events": [
                {
                  "scancode": 16777232
                }
              ]
            },
            {
              "name": "quentincaffeino_console_history_down",
              "events": [
                {
                  "scancode": 16777234
                }
              ]
            }
          ],
          "data_type": "Array",
          "signature": "const ACTIONS: Array = [{\"events\":[{\"scancode\":96}],\"name\":\"quentincaffeino_console_toggle\"},{\"events\":[{\"scancode\":16777218}],\"name\":\"quentincaffeino_console_autocomplete\"},{\"events\":[{\"scancode\":16777232}],\"name\":\"quentincaffeino_console_history_up\"},{\"events\":[{\"scancode\":16777234}],\"name\":\"quentincaffeino_console_history_down\"}]",
          "description": "@var  Array"
        },
        {
          "name": "PLUGIN_PATH",
          "value": "res://addons/quentincaffeino/console/src/Console.tscn",
          "data_type": "String",
          "signature": "const PLUGIN_PATH: String = \"res://addons/quentincaffeino/console/src/Console.tscn\"",
          "description": ""
        }
      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_enter_tree",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _enter_tree()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_exit_tree",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _exit_tree()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Argument.gd",
      "path": "res://addons/quentincaffeino/console/src/Argument/Argument.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Argument.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "ASSIGNMENT",
          "value": {
            "OK": 0,
            "FAILED": 1,
            "CANCELED": 2
          },
          "data_type": "Dictionary",
          "signature": "const ASSIGNMENT: Dictionary = {\"CANCELED\":2,\"FAILED\":1,\"OK\":0}",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_name",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _name",
          "description": "@var  String"
        },
        {
          "name": "_type",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _type",
          "description": "@var  BaseType"
        },
        {
          "name": "_description",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _description",
          "description": "@var  String|null"
        },
        {
          "name": "_original_value",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _original_value",
          "description": "@var  String"
        },
        {
          "name": "_normalized_value",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _normalized_value",
          "description": "@var  Variant"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(name, type, description = null)",
          "description": "@param  String       name\r\n @param  BaseType     type\r\n @param  String|null  description",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "type",
              "type": "var"
            },
            {
              "name": "description",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "get_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_name()",
          "description": "@returns  String",
          "arguments": [

          ]
        },
        {
          "name": "get_type",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_type()",
          "description": "@returns  BaseType",
          "arguments": [

          ]
        },
        {
          "name": "get_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_value()",
          "description": "@returns  String",
          "arguments": [

          ]
        },
        {
          "name": "set_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_value(value)",
          "description": "@param    Variant  value\r\n @returns  int",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_normalized_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_normalized_value()",
          "description": "@returns  Variant",
          "arguments": [

          ]
        },
        {
          "name": "describe",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func describe()",
          "description": "@returns  String",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "ArgumentFactory.gd",
      "path": "res://addons/quentincaffeino/console/src/Argument/ArgumentFactory.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class ArgumentFactory.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "Error",
          "value": "[GDScript:5471]",
          "data_type": "GDScript",
          "signature": "const Error: GDScript = preload(\"res://addons/quentincaffeino/console/src/Misc/Error.gd\")",
          "description": ""
        },
        {
          "name": "Result",
          "value": "[GDScript:5470]",
          "data_type": "GDScript",
          "signature": "const Result: GDScript = preload(\"res://addons/quentincaffeino/console/src/Misc/Result.gd\")",
          "description": ""
        },
        {
          "name": "TypeFactory",
          "value": "[GDScript:5469]",
          "data_type": "GDScript",
          "signature": "const TypeFactory: GDScript = preload(\"res://addons/quentincaffeino/console/src/Type/TypeFactory.gd\")",
          "description": ""
        },
        {
          "name": "BaseType",
          "value": "[GDScript:5473]",
          "data_type": "GDScript",
          "signature": "const BaseType: GDScript = preload(\"res://addons/quentincaffeino/console/src/Type/BaseType.gd\")",
          "description": ""
        },
        {
          "name": "Argument",
          "value": "[GDScript:5468]",
          "data_type": "GDScript",
          "signature": "const Argument: GDScript = preload(\"res://addons/quentincaffeino/console/src/Argument/Argument.gd\")",
          "description": ""
        },
        {
          "name": "FALLBACK_ERROR",
          "value": "73ca5439-fd62-442f-8a33-73135dbf5469",
          "data_type": "String",
          "signature": "const FALLBACK_ERROR: String = \"73ca5439-fd62-442f-8a33-73135dbf5469\"",
          "description": ""
        }
      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [
        {
          "name": "create",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func create(name, type = 0, description = null)",
          "description": "@param    String        name\r\n @param    int|BaseType  type\r\n @param    String|null   description\r\n @returns  Result",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "type",
              "type": "var",
              "default_value": 0
            },
            {
              "name": "description",
              "type": "var",
              "default_value": null
            }
          ]
        }
      ]
    },
    {
      "name": "Command.gd",
      "path": "res://addons/quentincaffeino/console/src/Command/Command.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Command.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "Argument",
          "value": "[GDScript:5468]",
          "data_type": "GDScript",
          "signature": "const Argument: GDScript = preload(\"res://addons/quentincaffeino/console/src/Argument/Argument.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_name",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _name",
          "description": "@var  String"
        },
        {
          "name": "_target",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _target",
          "description": "@var  Callback"
        },
        {
          "name": "_arguments",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _arguments",
          "description": "@var  Argument[]"
        },
        {
          "name": "_description",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _description",
          "description": "@var  String|null"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(name, target, arguments, description = null)",
          "description": "@param  String       name\r\n @param  Callback     target\r\n @param  Argument[]   arguments\r\n @param  String|null  description",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "arguments",
              "type": "var"
            },
            {
              "name": "description",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "get_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_name()",
          "description": "@returns  String",
          "arguments": [

          ]
        },
        {
          "name": "get_target",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_target()",
          "description": "@returns  Callback",
          "arguments": [

          ]
        },
        {
          "name": "get_arguments",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_arguments()",
          "description": "@returns  Argument[]",
          "arguments": [

          ]
        },
        {
          "name": "get_description",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_description()",
          "description": "@returns  String|null",
          "arguments": [

          ]
        },
        {
          "name": "execute",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func execute(inArgs)",
          "description": "@param    Array  inArgs\r\n @returns  Variant",
          "arguments": [
            {
              "name": "inArgs",
              "type": "var"
            }
          ]
        },
        {
          "name": "describe",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func describe()",
          "description": "@returns  void",
          "arguments": [

          ]
        },
        {
          "name": "_get_command_name",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _get_command_name()",
          "description": "@returns  String",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "CommandBuilder.gd",
      "path": "res://addons/quentincaffeino/console/src/Command/CommandBuilder.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class CommandBuilder.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "Callback",
          "value": "[GDScript:5458]",
          "data_type": "GDScript",
          "signature": "const Callback: GDScript = preload(\"res://addons/quentincaffeino/callback/src/Callback.gd\")",
          "description": ""
        },
        {
          "name": "CallbackBuilder",
          "value": "[GDScript:5456]",
          "data_type": "GDScript",
          "signature": "const CallbackBuilder: GDScript = preload(\"res://addons/quentincaffeino/callback/src/CallbackBuilder.gd\")",
          "description": ""
        },
        {
          "name": "ArgumentFactory",
          "value": "[GDScript:5467]",
          "data_type": "GDScript",
          "signature": "const ArgumentFactory: GDScript = preload(\"res://addons/quentincaffeino/console/src/Argument/ArgumentFactory.gd\")",
          "description": ""
        },
        {
          "name": "Command",
          "value": "[GDScript:5481]",
          "data_type": "GDScript",
          "signature": "const Command: GDScript = preload(\"res://addons/quentincaffeino/console/src/Command/Command.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_console",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _console",
          "description": "@var  Console"
        },
        {
          "name": "_command_service",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _command_service",
          "description": "@var  CommandService"
        },
        {
          "name": "_name",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _name",
          "description": "@var  String"
        },
        {
          "name": "_target",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _target",
          "description": "@var  Callback|null"
        },
        {
          "name": "_arguments",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _arguments",
          "description": "@var  Argument[]"
        },
        {
          "name": "_description",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _description",
          "description": "@var  String|null"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(console, command_service, name, target, target_name = null)",
          "description": "@param  Console         console\r\n @param  CommandService  command_service\r\n @param  String          name\r\n @param  Reference       target\r\n @param  String|null     target_name",
          "arguments": [
            {
              "name": "console",
              "type": "var"
            },
            {
              "name": "command_service",
              "type": "var"
            },
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "target_name",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "_initialize_target_callback",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _initialize_target_callback(target, name = null)",
          "description": "@param    Reference    target\r\n @param    String|null  name\r\n @returns  Callback|null",
          "arguments": [
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "name",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "add_argument",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func add_argument(name, type = null, description = null)",
          "description": "@param    String         name\r\n @param    BaseType|null  type\r\n @param    String|null    description\r\n @returns  CommandBuilder",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "type",
              "type": "var",
              "default_value": null
            },
            {
              "name": "description",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "set_description",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_description(description = null)",
          "description": "@param    String|null  description\r\n @returns  CommandBuilder",
          "arguments": [
            {
              "name": "description",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "register",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func register()",
          "description": "@returns  void",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "CommandCollection.gd",
      "path": "res://addons/quentincaffeino/console/src/Command/CommandCollection.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/array-utils/src/Collection.gd",
      "icon": "",
      "signature": "class CommandCollection.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "CallbackBuilder",
          "value": "[GDScript:5456]",
          "data_type": "GDScript",
          "signature": "const CallbackBuilder: GDScript = preload(\"res://addons/quentincaffeino/callback/src/CallbackBuilder.gd\")",
          "description": ""
        }
      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(collection)",
          "description": "",
          "arguments": [
            {
              "name": "collection",
              "type": "var"
            }
          ]
        },
        {
          "name": "find",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func find(command_name)",
          "description": "@param    String  command_name\r\n @returns  CommandCollection",
          "arguments": [
            {
              "name": "command_name",
              "type": "var"
            }
          ]
        },
        {
          "name": "_find_match",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _find_match(match_key, key, value, _i, _collection)",
          "description": "@param    String      match_key\r\n @param    String      key\r\n @param    String      value\r\n @param    int         _i\r\n @param    Collection  _collection\r\n @returns  bool",
          "arguments": [
            {
              "name": "match_key",
              "type": "var"
            },
            {
              "name": "key",
              "type": "var"
            },
            {
              "name": "value",
              "type": "var"
            },
            {
              "name": "_i",
              "type": "var"
            },
            {
              "name": "_collection",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "CommandService.gd",
      "path": "res://addons/quentincaffeino/console/src/Command/CommandService.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class CommandService.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "Result",
          "value": "[GDScript:5470]",
          "data_type": "GDScript",
          "signature": "const Result: GDScript = preload(\"res://addons/quentincaffeino/console/src/Misc/Result.gd\")",
          "description": ""
        },
        {
          "name": "Iterator",
          "value": "[GDScript:5455]",
          "data_type": "GDScript",
          "signature": "const Iterator: GDScript = preload(\"res://addons/quentincaffeino/iterator/src/Iterator.gd\")",
          "description": ""
        },
        {
          "name": "CommandCollection",
          "value": "[GDScript:5463]",
          "data_type": "GDScript",
          "signature": "const CommandCollection: GDScript = preload(\"res://addons/quentincaffeino/console/src/Command/CommandCollection.gd\")",
          "description": ""
        },
        {
          "name": "CommandBuilder",
          "value": "[GDScript:5466]",
          "data_type": "GDScript",
          "signature": "const CommandBuilder: GDScript = preload(\"res://addons/quentincaffeino/console/src/Command/CommandBuilder.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_console",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _console",
          "description": "@var  Console"
        },
        {
          "name": "_command_collection",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _command_collection",
          "description": "@var  CommandCollection"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(console)",
          "description": "@param  Console  console",
          "arguments": [
            {
              "name": "console",
              "type": "var"
            }
          ]
        },
        {
          "name": "values",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func values()",
          "description": "@returns  Iterator",
          "arguments": [

          ]
        },
        {
          "name": "create",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func create(command_name, target, target_name = null)",
          "description": "@param    String       command_name\r\n @param    Reference    target\r\n @param    String|null  target_name\r\n @returns  CommandBuilder",
          "arguments": [
            {
              "name": "command_name",
              "type": "var"
            },
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "target_name",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "set",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set(command_name, command)",
          "description": "@param    String   command_name\r\n @param    Command  command\r\n @returns  bool",
          "arguments": [
            {
              "name": "command_name",
              "type": "var"
            },
            {
              "name": "command",
              "type": "var"
            }
          ]
        },
        {
          "name": "get",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get(command_name)",
          "description": "@param    String   command_name\r\n @returns  Command|null",
          "arguments": [
            {
              "name": "command_name",
              "type": "var"
            }
          ]
        },
        {
          "name": "find",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func find(command_name)",
          "description": "@param    String   command_name\r\n @returns  CommandCollection",
          "arguments": [
            {
              "name": "command_name",
              "type": "var"
            }
          ]
        },
        {
          "name": "remove",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func remove(command_name)",
          "description": "@param    String   command_name\r\n @returns  void",
          "arguments": [
            {
              "name": "command_name",
              "type": "var"
            }
          ]
        },
        {
          "name": "autocomplete",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func autocomplete(command_name)",
          "description": "@param    String   command_name\r\n @returns  String",
          "arguments": [
            {
              "name": "command_name",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Console.gd",
      "path": "res://addons/quentincaffeino/console/src/Console.gd",
      "extends_class": [
        "CanvasLayer"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Console.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "CommandService",
          "value": "[GDScript:5454]",
          "data_type": "GDScript",
          "signature": "const CommandService: GDScript = preload(\"res://addons/quentincaffeino/console/src/Command/CommandService.gd\")",
          "description": ""
        },
        {
          "name": "BaseCommands",
          "value": "[GDScript:5452]",
          "data_type": "GDScript",
          "signature": "const BaseCommands: GDScript = preload(\"res://addons/quentincaffeino/console/src/Misc/BaseCommands.gd\")",
          "description": ""
        },
        {
          "name": "DefaultActions",
          "value": "[GDScript:5453]",
          "data_type": "GDScript",
          "signature": "const DefaultActions: GDScript = preload(\"res://addons/quentincaffeino/console/DefaultActions.gd\")",
          "description": ""
        },
        {
          "name": "IntRangeType",
          "value": "[GDScript:5482]",
          "data_type": "GDScript",
          "signature": "const IntRangeType: GDScript = preload(\"res://addons/quentincaffeino/console/src/Type/IntRangeType.gd\")",
          "description": "## Custom console types"
        },
        {
          "name": "FloatRangeType",
          "value": "[GDScript:5484]",
          "data_type": "GDScript",
          "signature": "const FloatRangeType: GDScript = preload(\"res://addons/quentincaffeino/console/src/Type/FloatRangeType.gd\")",
          "description": ""
        },
        {
          "name": "FilterType",
          "value": "[GDScript:5485]",
          "data_type": "GDScript",
          "signature": "const FilterType: GDScript = preload(\"res://addons/quentincaffeino/console/src/Type/FilterType.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "History",
          "data_type": "var",
          "default_value": null,
          "setter": "_set_readonly",
          "getter": "",
          "export": false,
          "signature": "var History",
          "description": "@var  History"
        },
        {
          "name": "Log",
          "data_type": "var",
          "default_value": null,
          "setter": "_set_readonly",
          "getter": "",
          "export": false,
          "signature": "var Log",
          "description": "@var  Logger"
        },
        {
          "name": "_command_service",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _command_service",
          "description": "@var  Command/CommandService"
        },
        {
          "name": "_erase_bb_tags_regex",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _erase_bb_tags_regex",
          "description": "Used to clear text from bb tags\r\n @var  RegEx"
        },
        {
          "name": "is_console_shown",
          "data_type": "var",
          "default_value": null,
          "setter": "_set_readonly",
          "getter": "",
          "export": false,
          "signature": "var is_console_shown",
          "description": "@var  bool"
        },
        {
          "name": "consume_input",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var consume_input",
          "description": "@var  bool"
        },
        {
          "name": "previous_focus_owner",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var previous_focus_owner",
          "description": "@var  Control"
        },
        {
          "name": "_console_box",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _console_box",
          "description": "## Console nodes"
        },
        {
          "name": "Text",
          "data_type": "var",
          "default_value": null,
          "setter": "_set_readonly",
          "getter": "",
          "export": false,
          "signature": "var Text",
          "description": ""
        },
        {
          "name": "Line",
          "data_type": "var",
          "default_value": null,
          "setter": "_set_readonly",
          "getter": "",
          "export": false,
          "signature": "var Line",
          "description": ""
        },
        {
          "name": "_animation_player",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _animation_player",
          "description": ""
        }
      ],
      "signals": [
        {
          "name": "toggled",
          "arguments": [
            "is_console_shown"
          ],
          "signature": "signal toggled(is_console_shown)",
          "description": "@param  bool  is_console_shown"
        },
        {
          "name": "command_added",
          "arguments": [
            "name",
            "target",
            "target_name"
          ],
          "signature": "signal command_added(name, target, target_name)",
          "description": "@param  String       name\r\n @param  Reference    target\r\n @param  String|null  target_name"
        },
        {
          "name": "command_removed",
          "arguments": [
            "name"
          ],
          "signature": "signal command_removed(name)",
          "description": "@param  String  name"
        },
        {
          "name": "command_executed",
          "arguments": [
            "command"
          ],
          "signature": "signal command_executed(command)",
          "description": "@param  Command  command"
        },
        {
          "name": "command_not_found",
          "arguments": [
            "name"
          ],
          "signature": "signal command_not_found(name)",
          "description": "@param  String  name"
        }
      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _input(e)",
          "description": "@param  InputEvent  e",
          "arguments": [
            {
              "name": "e",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_command_service",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_command_service()",
          "description": "@returns  Command/CommandService",
          "arguments": [

          ]
        },
        {
          "name": "get_command",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_command(name)",
          "description": "@param    String  name\r\n @returns  Command/Command|null",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            }
          ]
        },
        {
          "name": "find_commands",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func find_commands(name)",
          "description": "@param    String  name\r\n @returns  Command/CommandCollection",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            }
          ]
        },
        {
          "name": "add_command",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func add_command(name, target, target_name = null)",
          "description": "Example usage:\r\n ```gdscript\r\n Console.add_command('sayHello', self, 'print_hello')\\\r\n \t.set_description('Prints \"Hello %name%!\"')\\\r\n \t.add_argument('name', TYPE_STRING)\\\r\n \t.register()\r\n ```\r\n @param    String       name\r\n @param    Reference    target\r\n @param    String|null  target_name\r\n @returns  Command/CommandBuilder",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "target_name",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "remove_command",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func remove_command(name)",
          "description": "@param    String  name\r\n @returns  int",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            }
          ]
        },
        {
          "name": "write",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func write(message)",
          "description": "@param    String  message\r\n @returns  void",
          "arguments": [
            {
              "name": "message",
              "type": "var"
            }
          ]
        },
        {
          "name": "write_line",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func write_line(message = \"\")",
          "description": "@param    String  message\r\n @returns  void",
          "arguments": [
            {
              "name": "message",
              "type": "var",
              "default_value": ""
            }
          ]
        },
        {
          "name": "clear",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func clear()",
          "description": "@returns  void",
          "arguments": [

          ]
        },
        {
          "name": "toggle_console",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func toggle_console()",
          "description": "@returns  Console",
          "arguments": [

          ]
        },
        {
          "name": "_toggle_animation_finished",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _toggle_animation_finished(animation)",
          "description": "@returns  void",
          "arguments": [
            {
              "name": "animation",
              "type": "var"
            }
          ]
        },
        {
          "name": "_set_readonly",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _set_readonly(value)",
          "description": "@returns  void",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "ConsoleLine.gd",
      "path": "res://addons/quentincaffeino/console/src/ConsoleLine.gd",
      "extends_class": [
        "LineEdit"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class ConsoleLine.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "DefaultActions",
          "value": "[GDScript:5453]",
          "data_type": "GDScript",
          "signature": "const DefaultActions: GDScript = preload(\"res://addons/quentincaffeino/console/DefaultActions.gd\")",
          "description": ""
        },
        {
          "name": "COMMANDS_SEPARATOR",
          "value": ";",
          "data_type": "String",
          "signature": "const COMMANDS_SEPARATOR: String = \";\"",
          "description": ""
        },
        {
          "name": "COMMAND_PARTS_SEPARATOR",
          "value": " ",
          "data_type": "String",
          "signature": "const COMMAND_PARTS_SEPARATOR: String = \" \"",
          "description": ""
        },
        {
          "name": "RECOMMANDS_SEPARATOR",
          "value": "(?<!\\\\);",
          "data_type": "String",
          "signature": "const RECOMMANDS_SEPARATOR: String = \"(?<!\\\\\\\\);\"",
          "description": ""
        },
        {
          "name": "QUOTES",
          "value": [
            "\"",
            "'"
          ],
          "data_type": "Array",
          "signature": "const QUOTES: Array = [\"\\\"\",\"'\"]",
          "description": ""
        },
        {
          "name": "RegExLib",
          "value": "[GDScript:5490]",
          "data_type": "GDScript",
          "signature": "const RegExLib: GDScript = preload(\"res://addons/quentincaffeino/regexlib/src/RegExLib.gd\")",
          "description": ""
        },
        {
          "name": "SCREENERS",
          "value": [
            "\\/"
          ],
          "data_type": "Array",
          "signature": "const SCREENERS: Array = [\"\\\\/\"]",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_tmp_user_entered_command",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _tmp_user_entered_command",
          "description": "@var  String|null"
        },
        {
          "name": "_current_command",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _current_command",
          "description": "@var  String"
        },
        {
          "name": "_autocomplete_triggered_timer",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _autocomplete_triggered_timer",
          "description": "@var  SceneTreeTimer"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_gui_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _gui_input(event)",
          "description": "@param  InputEvent",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        },
        {
          "name": "_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _input(e)",
          "description": "@param  InputEvent  e",
          "arguments": [
            {
              "name": "e",
              "type": "var"
            }
          ]
        },
        {
          "name": "set_text",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_text(text, move_caret_to_end = true)",
          "description": "@param    String  text\r\n @param    bool    move_caret_to_end\r\n @returns  void",
          "arguments": [
            {
              "name": "text",
              "type": "var"
            },
            {
              "name": "move_caret_to_end",
              "type": "var",
              "default_value": true
            }
          ]
        },
        {
          "name": "execute",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func execute(input)",
          "description": "@param    String  input\r\n @returns  void",
          "arguments": [
            {
              "name": "input",
              "type": "var"
            }
          ]
        },
        {
          "name": "_parse_commands",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _parse_commands(rawCommands)",
          "description": "@param    PoolStringArray  rawCommands\r\n @returns  Array",
          "arguments": [
            {
              "name": "rawCommands",
              "type": "var"
            }
          ]
        },
        {
          "name": "_parse_command",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _parse_command(rawCommand)",
          "description": "@param    String  rawCommand\r\n @returns  Dictionary",
          "arguments": [
            {
              "name": "rawCommand",
              "type": "var"
            }
          ]
        },
        {
          "name": "_set_readonly",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _set_readonly(value)",
          "description": "@returns  void",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "BaseCommands.gd",
      "path": "res://addons/quentincaffeino/console/src/Misc/BaseCommands.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class BaseCommands.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_console",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _console",
          "description": "@var  Console"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(console)",
          "description": "@param  Console  console",
          "arguments": [
            {
              "name": "console",
              "type": "var"
            }
          ]
        },
        {
          "name": "_help",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _help(command_name = null)",
          "description": "Display help message or display description for the command.\r\n @param    String|null  command_name\r\n @returns  void",
          "arguments": [
            {
              "name": "command_name",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "_version",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _version()",
          "description": "Prints out engine version.\r\n @returns  void",
          "arguments": [

          ]
        },
        {
          "name": "_list_commands",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _list_commands()",
          "description": "@returns  void",
          "arguments": [

          ]
        },
        {
          "name": "_quit",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _quit()",
          "description": "Quitting application.\r\n @returns  void",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Error.gd",
      "path": "res://addons/quentincaffeino/console/src/Misc/Error.gd",
      "extends_class": [

      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Error.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_message",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _message",
          "description": "@var  String"
        },
        {
          "name": "_code",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _code",
          "description": "@var  Variant|null"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(message, code = null)",
          "description": "@param  String        message\r\n @param  Variant|null  code",
          "arguments": [
            {
              "name": "message",
              "type": "var"
            },
            {
              "name": "code",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "get_message",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_message()",
          "description": "@returns  String",
          "arguments": [

          ]
        },
        {
          "name": "get_code",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_code()",
          "description": "@returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "to_string",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func to_string()",
          "description": "@returns  String",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "History.gd",
      "path": "res://addons/quentincaffeino/console/src/Misc/History.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/array-utils/src/QueueCollection.gd",
      "icon": "",
      "signature": "class History.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(maxLength)",
          "description": "@param  int  maxLength",
          "arguments": [
            {
              "name": "maxLength",
              "type": "var"
            }
          ]
        },
        {
          "name": "print_all",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func print_all()",
          "description": "@returns  History",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Logger.gd",
      "path": "res://addons/quentincaffeino/console/src/Misc/Logger.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Logger.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "TYPE",
          "value": {
            "DEBUG": 0,
            "INFO": 1,
            "WARNING": 2,
            "ERROR": 3,
            "NONE": 4
          },
          "data_type": "Dictionary",
          "signature": "const TYPE: Dictionary = {\"DEBUG\":0,\"ERROR\":3,\"INFO\":1,\"NONE\":4,\"WARNING\":2}",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "logLevel",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var logLevel",
          "description": "@var  int"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "set_log_level",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_log_level(in_log_level)",
          "description": "@param    int  in_log_level\r\n @returns  Log",
          "arguments": [
            {
              "name": "in_log_level",
              "type": "var"
            }
          ]
        },
        {
          "name": "log",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func log(message, type)",
          "description": "Example usage:\r\n ```gdscript\r\n Console.Log.log(\"Hello world!\", Console.Log.TYPE.INFO)\r\n ```\r\n\r\n @param    String  message\r\n @param    int     type\r\n @returns  Log",
          "arguments": [
            {
              "name": "message",
              "type": "var"
            },
            {
              "name": "type",
              "type": "var"
            }
          ]
        },
        {
          "name": "debug",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func debug(message)",
          "description": "@param    String  message\r\n @returns  Log",
          "arguments": [
            {
              "name": "message",
              "type": "var"
            }
          ]
        },
        {
          "name": "info",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func info(message)",
          "description": "@param    String  message\r\n @returns  Log",
          "arguments": [
            {
              "name": "message",
              "type": "var"
            }
          ]
        },
        {
          "name": "warn",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func warn(message)",
          "description": "@param    String  message\r\n @returns  Log",
          "arguments": [
            {
              "name": "message",
              "type": "var"
            }
          ]
        },
        {
          "name": "error",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func error(message)",
          "description": "@param    String  message\r\n @returns  Log",
          "arguments": [
            {
              "name": "message",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Result.gd",
      "path": "res://addons/quentincaffeino/console/src/Misc/Result.gd",
      "extends_class": [

      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Result.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "Error",
          "value": "[GDScript:5471]",
          "data_type": "GDScript",
          "signature": "class Result.gd",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_value",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _value",
          "description": "@var  Variant"
        },
        {
          "name": "_error",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _error",
          "description": "@var  Variant"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(value, error = null)",
          "description": "@param  Variant  value\r\n @param  Variant  error",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            },
            {
              "name": "error",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "get_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_value()",
          "description": "@returns Variant",
          "arguments": [

          ]
        },
        {
          "name": "get_error",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_error()",
          "description": "@returns  Variant",
          "arguments": [

          ]
        },
        {
          "name": "has_error",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func has_error()",
          "description": "@returns  bool",
          "arguments": [

          ]
        }
      ],
      "static_functions": [
        {
          "name": "create_error",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func create_error(message)",
          "description": "@param    String  message\r\n @returns  Error",
          "arguments": [
            {
              "name": "message",
              "type": "var"
            }
          ]
        }
      ]
    },
    {
      "name": "Trie.gd",
      "path": "res://addons/quentincaffeino/console/src/Misc/Trie.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Trie.gd",
      "description": "",
      "sub_classes": [
        {
          "name": "TrieNode",
          "path": "res://addons/quentincaffeino/console/src/Misc/Trie.gd",
          "extends_class": [

          ],
          "extends_file": "",
          "icon": "",
          "signature": "class TrieNode",
          "description": "",
          "sub_classes": [

          ],
          "constants": [

          ],
          "members": [
            {
              "name": "_children",
              "data_type": "var",
              "default_value": null,
              "setter": "",
              "getter": "",
              "export": false,
              "signature": "var _children",
              "description": "@var  Dictionary"
            },
            {
              "name": "value",
              "data_type": "var",
              "default_value": null,
              "setter": "",
              "getter": "",
              "export": false,
              "signature": "var value",
              "description": "@var  Variant|null"
            }
          ],
          "signals": [

          ],
          "methods": [
            {
              "name": "_init",
              "return_type": "var",
              "rpc_mode": 0,
              "signature": "func _init()",
              "description": "Trie node class",
              "arguments": [

              ]
            },
            {
              "name": "get_children",
              "return_type": "var",
              "rpc_mode": 0,
              "signature": "func get_children()",
              "description": "@returns  Dictionary",
              "arguments": [

              ]
            },
            {
              "name": "has_child",
              "return_type": "var",
              "rpc_mode": 0,
              "signature": "func has_child(index)",
              "description": "@param    int  index\r\n @returns  bool",
              "arguments": [
                {
                  "name": "index",
                  "type": "var"
                }
              ]
            },
            {
              "name": "get_child",
              "return_type": "var",
              "rpc_mode": 0,
              "signature": "func get_child(index)",
              "description": "@param    int  index\r\n @returns  Dictionary",
              "arguments": [
                {
                  "name": "index",
                  "type": "var"
                }
              ]
            },
            {
              "name": "initialize_child_at",
              "return_type": "var",
              "rpc_mode": 0,
              "signature": "func initialize_child_at(index)",
              "description": "@param    int       index\r\n @returns  void",
              "arguments": [
                {
                  "name": "index",
                  "type": "var"
                }
              ]
            }
          ],
          "static_functions": [

          ]
        }
      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_root",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _root",
          "description": "@var  TrieNode"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "Trie data structure class",
          "arguments": [

          ]
        },
        {
          "name": "insert",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func insert(key, value)",
          "description": "If not present, inserts key into trie.\r\n If the key is prefix of trie node, just marks leaf node.\r\n @param    String   key\r\n @param    Variant  value\r\n @returns  void",
          "arguments": [
            {
              "name": "key",
              "type": "var"
            },
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "has",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func has(key)",
          "description": "Search key in the trie.\r\n Returns true if key presents in trie, else false.\r\n @param    String  key\r\n @returns  bool",
          "arguments": [
            {
              "name": "key",
              "type": "var"
            }
          ]
        },
        {
          "name": "get",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get(key)",
          "description": "Search key in the trie.\r\n Returns value if key presents in trie, else null.\r\n @param    String  key\r\n @returns  Variant|null",
          "arguments": [
            {
              "name": "key",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "AnyType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/AnyType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseType.gd",
      "icon": "",
      "signature": "class AnyType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "BaseRangeType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/BaseRangeType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseRegexCheckedType.gd",
      "icon": "",
      "signature": "class BaseRangeType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_min_value",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _min_value",
          "description": "@var  int|float"
        },
        {
          "name": "_max_value",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _max_value",
          "description": "@var  int|float"
        },
        {
          "name": "_step",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _step",
          "description": "@var  int|float"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(name, min_value, max_value, step)",
          "description": "@param  String     name\r\n @param  int|float  min_value\r\n @param  int|float  max_value\r\n @param  int|float  step",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "min_value",
              "type": "var"
            },
            {
              "name": "max_value",
              "type": "var"
            },
            {
              "name": "step",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_min_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_min_value()",
          "description": "@returns  int|float",
          "arguments": [

          ]
        },
        {
          "name": "set_min_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_min_value(min_value)",
          "description": "@param  int|float  min_value\r\n @returns  BaseRange",
          "arguments": [
            {
              "name": "min_value",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_max_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_max_value()",
          "description": "@returns  int|float",
          "arguments": [

          ]
        },
        {
          "name": "set_max_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_max_value(max_value)",
          "description": "@param  int|float  max_value\r\n @returns  BaseRange",
          "arguments": [
            {
              "name": "max_value",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_step",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_step()",
          "description": "@returns  int|float",
          "arguments": [

          ]
        },
        {
          "name": "set_step",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_step(step)",
          "description": "@param    int|float  step\r\n @returns  BaseRange",
          "arguments": [
            {
              "name": "step",
              "type": "var"
            }
          ]
        },
        {
          "name": "to_string",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func to_string()",
          "description": "@returns  String",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "BaseRegexCheckedType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/BaseRegexCheckedType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseType.gd",
      "icon": "",
      "signature": "class BaseRegexCheckedType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_pattern",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _pattern",
          "description": "@var  String"
        },
        {
          "name": "_regex",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _regex",
          "description": "@var  RegEx"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(name, pattern)",
          "description": "@param  String  name\r\n @param  String  pattern",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            },
            {
              "name": "pattern",
              "type": "var"
            }
          ]
        },
        {
          "name": "check",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func check(value)",
          "description": "@param    Variant  value\r\n @returns  int",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "_reextract",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _reextract(value)",
          "description": "@param    Variant  value\r\n @returns  String|null",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "BaseType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/BaseType.gd",
      "extends_class": [

      ],
      "extends_file": "",
      "icon": "",
      "signature": "class BaseType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "CHECK",
          "value": {
            "OK": 0,
            "FAILED": 1,
            "CANCELED": 2
          },
          "data_type": "Dictionary",
          "signature": "class BaseType.gd",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_name",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _name",
          "description": "@var  String"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(name)",
          "description": "@param  String  name",
          "arguments": [
            {
              "name": "name",
              "type": "var"
            }
          ]
        },
        {
          "name": "check",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func check(value)",
          "description": "Assignment check.\r\n Returns one of the statuses:\r\n CHECK.OK, CHECK.FAILED and CHECK.CANCELED\r\n @param    Variant  value\r\n @returns  int",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "Normalize variable\r\n @param    Variant  value\r\n @returns  Variant",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "to_string",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func to_string()",
          "description": "@returns  String",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "BoolType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/BoolType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseType.gd",
      "icon": "",
      "signature": "class BoolType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "@param    Variant  value\r\n @returns  Variant",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "FilterType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/FilterType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseType.gd",
      "icon": "",
      "signature": "class FilterType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "MODE",
          "value": {
            "ALLOW": 0,
            "DENY": 1
          },
          "data_type": "Dictionary",
          "signature": "const MODE: Dictionary = {\"ALLOW\":0,\"DENY\":1}",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_filterList",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _filterList",
          "description": "@var  Array"
        },
        {
          "name": "_mode",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _mode",
          "description": "@var  int"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(filterList, mode)",
          "description": "@param  Array  filterList\r\n @param  int    mode",
          "arguments": [
            {
              "name": "filterList",
              "type": "var"
            },
            {
              "name": "mode",
              "type": "var"
            }
          ]
        },
        {
          "name": "check",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func check(value)",
          "description": "@param    Variant  value\r\n @returns  int",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "FloatRangeType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/FloatRangeType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseRangeType.gd",
      "icon": "",
      "signature": "class FloatRangeType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(minValue = 0, maxValue = 100, step = 0.1)",
          "description": "@param  float  minValue\r\n @param  float  maxValue\r\n @param  float  step",
          "arguments": [
            {
              "name": "minValue",
              "type": "var",
              "default_value": 0
            },
            {
              "name": "maxValue",
              "type": "var",
              "default_value": 100
            },
            {
              "name": "step",
              "type": "var",
              "default_value": 0.1
            }
          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "Normalize variable.\r\n @param    Variant  value\r\n @returns  Variant",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "FloatType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/FloatType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseRegexCheckedType.gd",
      "icon": "",
      "signature": "class FloatType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "@param    Variant  value\r\n @returns  float",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "IntRangeType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/IntRangeType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseRangeType.gd",
      "icon": "",
      "signature": "class IntRangeType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(minValue = 0, maxValue = 100, step = 1)",
          "description": "@param  int   minValue\r\n @param  int   maxValue\r\n @param  int   step",
          "arguments": [
            {
              "name": "minValue",
              "type": "var",
              "default_value": 0
            },
            {
              "name": "maxValue",
              "type": "var",
              "default_value": 100
            },
            {
              "name": "step",
              "type": "var",
              "default_value": 1
            }
          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "Normalize variable.\r\n @param    Variant  value\r\n @returns  Variant",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "IntType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/IntType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseRegexCheckedType.gd",
      "icon": "",
      "signature": "class IntType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "@param    Variant  value\r\n @returns  int",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "StringType.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/StringType.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseType.gd",
      "icon": "",
      "signature": "class StringType.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "Normalize variable\r\n @param    Varian  value\r\n @returns  String",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "TypeFactory.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/TypeFactory.gd",
      "extends_class": [

      ],
      "extends_file": "",
      "icon": "",
      "signature": "class TypeFactory.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "Result",
          "value": "[GDScript:5470]",
          "data_type": "GDScript",
          "signature": "class TypeFactory.gd",
          "description": ""
        },
        {
          "name": "TYPE_LIST",
          "value": [
            "[GDScript:5472]",
            "[GDScript:5474]",
            "[GDScript:5475]",
            "[GDScript:5477]",
            "[GDScript:5478]",
            "[GDScript:5479]",
            null,
            "[GDScript:5480]"
          ],
          "data_type": "Array",
          "signature": "const TYPE_LIST: Array = [\"[GDScript:5472]\",\"[GDScript:5474]\",\"[GDScript:5475]\",\"[GDScript:5477]\",\"[GDScript:5478]\",\"[GDScript:5479]\",null,\"[GDScript:5480]\"]",
          "description": ""
        }
      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [
        {
          "name": "_type_const_to_type_list_index",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _type_const_to_type_list_index(type)",
          "description": "@param    int  type\r\n @returns  Result<Resource, Error>",
          "arguments": [
            {
              "name": "type",
              "type": "var"
            }
          ]
        },
        {
          "name": "create",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func create(engine_type)",
          "description": "@param    int  engine_type\r\n @returns  Result<BaseType, Error>",
          "arguments": [
            {
              "name": "engine_type",
              "type": "var"
            }
          ]
        }
      ]
    },
    {
      "name": "Vector2Type.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/Vector2Type.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseRegexCheckedType.gd",
      "icon": "",
      "signature": "class Vector2Type.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_normalized_value",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _normalized_value",
          "description": "@var  Vector2|null"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "check",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func check(value)",
          "description": "@param    Variant  value\r\n @returns  int",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "@param    Variant  value\r\n @returns  Variant",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Vector3Type.gd",
      "path": "res://addons/quentincaffeino/console/src/Type/Vector3Type.gd",
      "extends_class": [

      ],
      "extends_file": "res://addons/quentincaffeino/console/src/Type/BaseRegexCheckedType.gd",
      "icon": "",
      "signature": "class Vector3Type.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "_normalized_value",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _normalized_value",
          "description": "@var  Vector3|null"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "check",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func check(value)",
          "description": "@param    Variant  value\r\n @returns  int",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        },
        {
          "name": "normalize",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func normalize(value)",
          "description": "@param    Variant  value\r\n @returns  Variant",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {

    },
    {

    },
    {

    },
    {

    },
    {

    },
    {

    },
    {

    },
    {

    },
    {

    },
    {
      "name": "Iterator.gd",
      "path": "res://addons/quentincaffeino/iterator/src/Iterator.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Iterator.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "CallbackBuilder",
          "value": "[GDScript:5456]",
          "data_type": "GDScript",
          "signature": "const CallbackBuilder: GDScript = preload(\"res://addons/quentincaffeino/callback/src/CallbackBuilder.gd\")",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "_object_get_value_cb",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _object_get_value_cb",
          "description": "@var  Callback"
        },
        {
          "name": "_object_get_length_cb",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _object_get_length_cb",
          "description": "@var  Callback"
        },
        {
          "name": "_iteration_current_index",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var _iteration_current_index",
          "description": "@var  int"
        },
        {
          "name": "length",
          "data_type": "var",
          "default_value": null,
          "setter": "_set_readonly",
          "getter": "length",
          "export": false,
          "signature": "var length",
          "description": "@var  int"
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init(target, get_value_field = \"get\", get_length_field = \"size\")",
          "description": "@param  Reference  target\r\n @param  String     get_value_field\r\n @param  String     get_length_field",
          "arguments": [
            {
              "name": "target",
              "type": "var"
            },
            {
              "name": "get_value_field",
              "type": "var",
              "default_value": "get"
            },
            {
              "name": "get_length_field",
              "type": "var",
              "default_value": "size"
            }
          ]
        },
        {
          "name": "length",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func length()",
          "description": "@returns  int",
          "arguments": [

          ]
        },
        {
          "name": "_get",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _get(index)",
          "description": "@param    int  index\r\n @returns  Variant",
          "arguments": [
            {
              "name": "index",
              "type": "var"
            }
          ]
        },
        {
          "name": "first",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func first()",
          "description": "Sets the internal iterator to the first element in the collection and returns this element.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "last",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func last()",
          "description": "Sets the internal iterator to the last element in the collection and returns this element.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "key",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func key()",
          "description": "Gets the current key/index at the current internal iterator position.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "next",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func next()",
          "description": "Moves the internal iterator position to the next element and returns this element.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "previous",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func previous()",
          "description": "Moves the internal iterator position to the previous element and returns this element.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "current",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func current()",
          "description": "Gets the element of the collection at the current internal iterator position.\r\n @returns  Variant|null",
          "arguments": [

          ]
        },
        {
          "name": "_iter_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _iter_init(arg)",
          "description": "@override  _iter_init(?)\r\n @returns   bool",
          "arguments": [
            {
              "name": "arg",
              "type": "var"
            }
          ]
        },
        {
          "name": "_iter_next",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _iter_next(arg)",
          "description": "@override  _iter_next(?)\r\n @returns   bool",
          "arguments": [
            {
              "name": "arg",
              "type": "var"
            }
          ]
        },
        {
          "name": "_iter_get",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _iter_get(arg = null)",
          "description": "@override  _iter_get(?)\r\n @returns   Variant",
          "arguments": [
            {
              "name": "arg",
              "type": "var",
              "default_value": null
            }
          ]
        },
        {
          "name": "_set_readonly",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _set_readonly(value)",
          "description": "@returns  void",
          "arguments": [
            {
              "name": "value",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "RegExLib.gd",
      "path": "res://addons/quentincaffeino/regexlib/src/RegExLib.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class RegExLib.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [
        {
          "name": "split",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func split(pattern, subject)",
          "description": "@param  string  pattern\r\n @param  string  subject",
          "arguments": [
            {
              "name": "pattern",
              "type": "var"
            },
            {
              "name": "subject",
              "type": "var"
            }
          ]
        }
      ]
    },
    {
      "name": "plugin.gd",
      "path": "res://addons/SmoothScroll/plugin.gd",
      "extends_class": [
        "EditorPlugin"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class plugin.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_enter_tree",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _enter_tree()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_exit_tree",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _exit_tree()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "SmoothScroll.gd",
      "path": "res://addons/SmoothScroll/SmoothScroll.gd",
      "extends_class": [
        "Control"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class SmoothScroll.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "multi",
          "data_type": "var",
          "default_value": 8,
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var multi = 8",
          "description": "drag speed of one input"
        },
        {
          "name": "damping",
          "data_type": "var",
          "default_value": 0.1,
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var damping = 0.1",
          "description": ""
        },
        {
          "name": "scrollbar_damping",
          "data_type": "var",
          "default_value": 1,
          "setter": "",
          "getter": "",
          "export": true,
          "signature": "export var scrollbar_damping = 1",
          "description": ""
        },
        {
          "name": "v",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var v",
          "description": "current velocity"
        },
        {
          "name": "just_stop_under",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var just_stop_under",
          "description": ""
        },
        {
          "name": "is_grabbed",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var is_grabbed",
          "description": ""
        },
        {
          "name": "over_drag_multiplicator_top",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var over_drag_multiplicator_top",
          "description": ""
        },
        {
          "name": "over_drag_multiplicator_bottom",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var over_drag_multiplicator_bottom",
          "description": ""
        },
        {
          "name": "scroll_grabbed",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var scroll_grabbed",
          "description": ""
        },
        {
          "name": "cursor_offset",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var cursor_offset",
          "description": ""
        },
        {
          "name": "content_node",
          "data_type": "Control",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var content_node: Control",
          "description": ""
        },
        {
          "name": "did_shift",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var did_shift",
          "description": ""
        },
        {
          "name": "last_mouse_pos",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var last_mouse_pos",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_process",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _process(delta)",
          "description": "",
          "arguments": [
            {
              "name": "delta",
              "type": "var"
            }
          ]
        },
        {
          "name": "shift_thumb",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func shift_thumb(do_shift)",
          "description": "",
          "arguments": [
            {
              "name": "do_shift",
              "type": "var"
            }
          ]
        },
        {
          "name": "_gui_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _gui_input(event)",
          "description": "",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        },
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_ScrollThumb_gui_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_ScrollThumb_gui_input(event)",
          "description": "",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Collector.gd",
      "path": "res://Collector.gd",
      "extends_class": [
        "SceneTree"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Collector.gd",
      "description": "Finds and generates a code reference from gdscript files.",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "warnings_regex",
          "data_type": "RegEx",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var warnings_regex: RegEx",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func _init() -> null",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "find_files",
          "return_type": "PoolStringArray",
          "rpc_mode": 0,
          "signature": "func find_files(dirpath: String = \"\", patterns: PoolStringArray = [], is_recursive: bool = false, do_skip_hidden: bool = true) -> PoolStringArray",
          "description": "",
          "arguments": [
            {
              "name": "dirpath",
              "type": "String",
              "default_value": ""
            },
            {
              "name": "patterns",
              "type": "PoolStringArray",
              "default_value": [

              ]
            },
            {
              "name": "is_recursive",
              "type": "bool",
              "default_value": false
            },
            {
              "name": "do_skip_hidden",
              "type": "bool",
              "default_value": true
            }
          ]
        },
        {
          "name": "save_text",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func save_text(path: String = \"\", content: String = \"\") -> null",
          "description": "Saves text to a file.",
          "arguments": [
            {
              "name": "path",
              "type": "String",
              "default_value": ""
            },
            {
              "name": "content",
              "type": "String",
              "default_value": ""
            }
          ]
        },
        {
          "name": "get_reference",
          "return_type": "Dictionary",
          "rpc_mode": 0,
          "signature": "func get_reference(files: PoolStringArray = [], refresh_cache: bool = false) -> Dictionary",
          "description": "Parses a list of GDScript files and returns a list of dictionaries with the\r\n code reference data.\r\n\r\n If `refresh_cache` is true, will refresh Godot's cache and get fresh symbols.",
          "arguments": [
            {
              "name": "files",
              "type": "PoolStringArray",
              "default_value": [

              ]
            },
            {
              "name": "refresh_cache",
              "type": "bool",
              "default_value": false
            }
          ]
        },
        {
          "name": "remove_warning_comments",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func remove_warning_comments(symbols: Dictionary) -> null",
          "description": "Directly removes 'warning-ignore', 'warning-ignore-all', and 'warning-disable'\r\n comments from all symbols in the `symbols` dictionary passed to the function.",
          "arguments": [
            {
              "name": "symbols",
              "type": "Dictionary"
            }
          ]
        },
        {
          "name": "remove_warnings_from_description",
          "return_type": "String",
          "rpc_mode": 0,
          "signature": "func remove_warnings_from_description(description: String) -> String",
          "description": "",
          "arguments": [
            {
              "name": "description",
              "type": "String"
            }
          ]
        },
        {
          "name": "print_pretty_json",
          "return_type": "String",
          "rpc_mode": 0,
          "signature": "func print_pretty_json(reference: Dictionary) -> String",
          "description": "",
          "arguments": [
            {
              "name": "reference",
              "type": "Dictionary"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "ReferenceCollectorCLI.gd",
      "path": "res://ReferenceCollectorCLI.gd",
      "extends_class": [
        "SceneTree"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class ReferenceCollectorCLI.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "Collector",
          "data_type": "SceneTree",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var Collector: SceneTree",
          "description": ""
        },
        {
          "name": "directories",
          "data_type": "Array",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var directories: Array",
          "description": "A list of directories to collect files from."
        },
        {
          "name": "is_recursive",
          "data_type": "bool",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var is_recursive: bool",
          "description": "If true, explore each directory recursively"
        },
        {
          "name": "patterns",
          "data_type": "Array",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var patterns: Array",
          "description": "A list of patterns to filter files."
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func _init() -> null",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "downloader.gd",
      "path": "res://src/classes/downloader.gd",
      "extends_class": [
        "Node"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class downloader.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "http_request",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var http_request",
          "description": ""
        },
        {
          "name": "process_percent",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var process_percent",
          "description": ""
        }
      ],
      "signals": [
        {
          "name": "loaded",
          "arguments": [

          ],
          "signature": "signal loaded()",
          "description": ""
        },
        {
          "name": "process",
          "arguments": [

          ],
          "signature": "signal process()",
          "description": ""
        }
      ],
      "methods": [
        {
          "name": "download",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func download(url: String)",
          "description": "",
          "arguments": [
            {
              "name": "url",
              "type": "String"
            }
          ]
        },
        {
          "name": "_process",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _process(delta)",
          "description": "",
          "arguments": [
            {
              "name": "delta",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_process",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_process()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_send_loaded_signal",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _send_loaded_signal(r, code, headers, body)",
          "description": "",
          "arguments": [
            {
              "name": "r",
              "type": "var"
            },
            {
              "name": "code",
              "type": "var"
            },
            {
              "name": "headers",
              "type": "var"
            },
            {
              "name": "body",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "Funcs",
      "path": "res://src/public_scripts/funcs.gd",
      "extends_class": [
        "Reference"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class Funcs",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [
        {
          "name": "list_files_in_directory",
          "return_type": "PoolStringArray",
          "rpc_mode": 0,
          "signature": "func list_files_in_directory(path) -> PoolStringArray",
          "description": "",
          "arguments": [
            {
              "name": "path",
              "type": "var"
            }
          ]
        },
        {
          "name": "list_folders_in_directory",
          "return_type": "PoolStringArray",
          "rpc_mode": 0,
          "signature": "func list_folders_in_directory(path) -> PoolStringArray",
          "description": "",
          "arguments": [
            {
              "name": "path",
              "type": "var"
            }
          ]
        },
        {
          "name": "is_word_in_string",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func is_word_in_string(wordToSearch: String, string: String, caseSensitive = false)",
          "description": "",
          "arguments": [
            {
              "name": "wordToSearch",
              "type": "String"
            },
            {
              "name": "string",
              "type": "String"
            },
            {
              "name": "caseSensitive",
              "type": "var",
              "default_value": false
            }
          ]
        },
        {
          "name": "get_added_items_in_arr1",
          "return_type": "Array",
          "rpc_mode": 0,
          "signature": "func get_added_items_in_arr1(arr1, arr2) -> Array",
          "description": "",
          "arguments": [
            {
              "name": "arr1",
              "type": "var"
            },
            {
              "name": "arr2",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_json_in_dir",
          "return_type": "String",
          "rpc_mode": 0,
          "signature": "func get_json_in_dir(path: String) -> String",
          "description": "",
          "arguments": [
            {
              "name": "path",
              "type": "String"
            }
          ]
        },
        {
          "name": "read_json",
          "return_type": "Dictionary",
          "rpc_mode": 0,
          "signature": "func read_json(path: String) -> Dictionary",
          "description": "",
          "arguments": [
            {
              "name": "path",
              "type": "String"
            }
          ]
        }
      ]
    },
    {
      "name": "globals.gd",
      "path": "res://src/public_scripts/globals.gd",
      "extends_class": [
        "Node"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class globals.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "scene_handler",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var scene_handler",
          "description": ""
        },
        {
          "name": "dev_mode",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var dev_mode",
          "description": ""
        },
        {
          "name": "encryptText",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var encryptText",
          "description": "Will be setable in settings"
        },
        {
          "name": "IMPORTED",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var IMPORTED",
          "description": "{\"root_folder_name\": {\"name\": \"\", \"type\": \"\", \"json\": \"\", \"from\": \"\"}, ...}"
        }
      ],
      "signals": [

      ],
      "methods": [

      ],
      "static_functions": [

      ]
    },
    {
      "name": "thread_handler.gd",
      "path": "res://src/public_scripts/thread_handler.gd",
      "extends_class": [
        "Node"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class thread_handler.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "thread",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var thread",
          "description": ""
        },
        {
          "name": "jobs",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var jobs",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "add_job",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func add_job(object: Object, function: String, jobArgs: PoolStringArray, callBack: String = \"\", callBackObject = null, delay: int = 0)",
          "description": "",
          "arguments": [
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "function",
              "type": "String"
            },
            {
              "name": "jobArgs",
              "type": "PoolStringArray"
            },
            {
              "name": "callBack",
              "type": "String",
              "default_value": ""
            },
            {
              "name": "callBackObject",
              "type": "var",
              "default_value": null
            },
            {
              "name": "delay",
              "type": "int",
              "default_value": 0
            }
          ]
        },
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_thread_loop",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _thread_loop(ignore)",
          "description": "",
          "arguments": [
            {
              "name": "ignore",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "slick_button.gd",
      "path": "res://src/ui/controls/slick_button/slick_button.gd",
      "extends_class": [
        "NinePatchRect"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class slick_button.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [
        {
          "name": "held",
          "arguments": [

          ],
          "signature": "signal held()",
          "description": ""
        },
        {
          "name": "pressed",
          "arguments": [

          ],
          "signature": "signal pressed()",
          "description": ""
        }
      ],
      "methods": [
        {
          "name": "_on_SlickButton_gui_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SlickButton_gui_input(event)",
          "description": "",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        },
        {
          "name": "check_hover",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func check_hover()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_AnimationPlayer_animation_finished",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_AnimationPlayer_animation_finished(anim_name)",
          "description": "",
          "arguments": [
            {
              "name": "anim_name",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "debug_library.gd",
      "path": "res://src/ui/pages/modules/debug_library/debug_library.gd",
      "extends_class": [
        "Control"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class debug_library.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_on_SlickButton_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SlickButton_pressed()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "dlc_library.gd",
      "path": "res://src/ui/pages/modules/dlc_library/dlc_library.gd",
      "extends_class": [
        "Control"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class dlc_library.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_on_SlickButton_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SlickButton_pressed()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "mystery_entry.gd",
      "path": "res://src/ui/pages/modules/mystery_entry/mystery_entry.gd",
      "extends_class": [
        "Control"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class mystery_entry.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "key",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var key",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "init_data",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func init_data(data)",
          "description": "",
          "arguments": [
            {
              "name": "data",
              "type": "var"
            }
          ]
        },
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_SlickButton_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SlickButton_pressed()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "page.gd",
      "path": "res://src/ui/pages/page.gd",
      "extends_class": [
        "Control"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class page.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "MODULES_PATH",
          "value": "res://src/ui/pages/modules/",
          "data_type": "String",
          "signature": "const MODULES_PATH: String = \"res://src/ui/pages/modules/\"",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "page_obj",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var page_obj",
          "description": ""
        },
        {
          "name": "data",
          "data_type": "Dictionary",
          "default_value": null,
          "setter": "set_data",
          "getter": "get_data",
          "export": false,
          "signature": "var data: Dictionary",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "set_data",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func set_data(val)",
          "description": "",
          "arguments": [
            {
              "name": "val",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_data",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_data()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "init_page",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func init_page(page_obj: Object)",
          "description": "",
          "arguments": [
            {
              "name": "page_obj",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_on_modules_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_modules_ready(data)",
          "description": "",
          "arguments": [
            {
              "name": "data",
              "type": "var"
            }
          ]
        },
        {
          "name": "load_module",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func load_module(module, delay)",
          "description": "",
          "arguments": [
            {
              "name": "module",
              "type": "var"
            },
            {
              "name": "delay",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_modules",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func get_modules()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "clear_modules",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func clear_modules()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_SlickButton_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SlickButton_pressed()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_SlickButton2_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SlickButton2_pressed()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "debug_library.gd",
      "path": "res://src/ui/pages/page_objects/debug_library.gd",
      "extends_class": [
        "Object"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class debug_library.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "ready",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var ready",
          "description": ""
        },
        {
          "name": "data",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var data",
          "description": ""
        }
      ],
      "signals": [
        {
          "name": "modules_ready",
          "arguments": [
            "data"
          ],
          "signature": "signal modules_ready(data)",
          "description": ""
        }
      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_loaded",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _loaded()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "get_modules",
          "return_type": "Dictionary",
          "rpc_mode": 0,
          "signature": "func get_modules() -> Dictionary",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_action_button_clicked",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _action_button_clicked(page_obj)",
          "description": "",
          "arguments": [
            {
              "name": "page_obj",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "dlc_library.gd",
      "path": "res://src/ui/pages/page_objects/dlc_library.gd",
      "extends_class": [
        "Object"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class dlc_library.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "ready",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var ready",
          "description": ""
        },
        {
          "name": "data",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var data",
          "description": ""
        }
      ],
      "signals": [
        {
          "name": "modules_ready",
          "arguments": [
            "data"
          ],
          "signature": "signal modules_ready(data)",
          "description": ""
        }
      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_loaded",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _loaded()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "get_modules",
          "return_type": "Dictionary",
          "rpc_mode": 0,
          "signature": "func get_modules() -> Dictionary",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_action_button_clicked",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _action_button_clicked(page_obj)",
          "description": "",
          "arguments": [
            {
              "name": "page_obj",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "home.gd",
      "path": "res://src/ui/pages/page_objects/home.gd",
      "extends_class": [
        "Object"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class home.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "ready",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var ready",
          "description": ""
        },
        {
          "name": "data",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var data",
          "description": ""
        }
      ],
      "signals": [
        {
          "name": "modules_ready",
          "arguments": [
            "data"
          ],
          "signature": "signal modules_ready(data)",
          "description": ""
        }
      ],
      "methods": [
        {
          "name": "_init",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _init()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "get_modules",
          "return_type": "Dictionary",
          "rpc_mode": 0,
          "signature": "func get_modules() -> Dictionary",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "side_menu.gd",
      "path": "res://src/ui/pages/side_menu/side_menu.gd",
      "extends_class": [
        "Control"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class side_menu.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "open",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func open()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "close",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func close()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_SideMenuButton3_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SideMenuButton3_pressed()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_SideMenuButton_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SideMenuButton_pressed()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_SideMenuButton4_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SideMenuButton4_pressed()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_SideMenuButton2_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SideMenuButton2_pressed()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_Control_gui_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_Control_gui_input(event)",
          "description": "",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        },
        {
          "name": "_on_SideMenuButton5_pressed",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_SideMenuButton5_pressed()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "scene_handler.gd",
      "path": "res://src/ui/scene_handler/scene_handler.gd",
      "extends_class": [
        "Control"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class scene_handler.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [
        {
          "name": "SCENE_SIDEMENU",
          "value": "[PackedScene:20827]",
          "data_type": "PackedScene",
          "signature": "const SCENE_SIDEMENU: PackedScene = preload(\"res://src/ui/pages/side_menu/side_menu.tscn\")",
          "description": ""
        },
        {
          "name": "SCENE_PAGE",
          "value": "[PackedScene:20786]",
          "data_type": "PackedScene",
          "signature": "const SCENE_PAGE: PackedScene = preload(\"res://src/ui/pages/page.tscn\")",
          "description": ""
        },
        {
          "name": "PATH_OBJECTS",
          "value": "res://src/ui/pages/page_objects/",
          "data_type": "String",
          "signature": "const PATH_OBJECTS: String = \"res://src/ui/pages/page_objects/\"",
          "description": ""
        },
        {
          "name": "TRANSITIONS",
          "value": {
            "NONE": 0,
            "TO_LEFT": 1,
            "TO_RIGHT": 2,
            "FADE_ZOOM": 3
          },
          "data_type": "Dictionary",
          "signature": "const TRANSITIONS: Dictionary = {\"FADE_ZOOM\":3,\"NONE\":0,\"TO_LEFT\":1,\"TO_RIGHT\":2}",
          "description": ""
        }
      ],
      "members": [
        {
          "name": "tween",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var tween",
          "description": ""
        },
        {
          "name": "scene_history",
          "data_type": "Array",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var scene_history: Array",
          "description": ""
        },
        {
          "name": "last_scene",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var last_scene",
          "description": ""
        },
        {
          "name": "current_scene",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var current_scene",
          "description": ""
        },
        {
          "name": "allowed_back",
          "data_type": "bool",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var allowed_back: bool",
          "description": ""
        },
        {
          "name": "dialogue_view",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var dialogue_view",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "go_last",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func go_last(transition)",
          "description": "",
          "arguments": [
            {
              "name": "transition",
              "type": "var"
            }
          ]
        },
        {
          "name": "open_dialogue_view",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func open_dialogue_view(path: String, transition)",
          "description": "",
          "arguments": [
            {
              "name": "path",
              "type": "String"
            },
            {
              "name": "transition",
              "type": "var"
            }
          ]
        },
        {
          "name": "open",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func open(path: String, transition, allow_back = true)",
          "description": "",
          "arguments": [
            {
              "name": "path",
              "type": "String"
            },
            {
              "name": "transition",
              "type": "var"
            },
            {
              "name": "allow_back",
              "type": "var",
              "default_value": true
            }
          ]
        },
        {
          "name": "open_side_menu",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func open_side_menu()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "start_tween",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func start_tween(transition)",
          "description": "",
          "arguments": [
            {
              "name": "transition",
              "type": "var"
            }
          ]
        },
        {
          "name": "_on_Tween_tween_started",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_Tween_tween_started(object, key)",
          "description": "",
          "arguments": [
            {
              "name": "object",
              "type": "var"
            },
            {
              "name": "key",
              "type": "var"
            }
          ]
        },
        {
          "name": "_unhandled_key_input",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _unhandled_key_input(event)",
          "description": "",
          "arguments": [
            {
              "name": "event",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "startup_screen.gd",
      "path": "res://src/ui/screens/startup_screen/startup_screen.gd",
      "extends_class": [
        "Control"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class startup_screen.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "loading",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var loading",
          "description": ""
        }
      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "_ready",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _ready()",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_on_AnimationPlayer_animation_finished",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _on_AnimationPlayer_animation_finished(anim_name)",
          "description": "",
          "arguments": [
            {
              "name": "anim_name",
              "type": "var"
            }
          ]
        },
        {
          "name": "_process",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func _process(delta)",
          "description": "Method function does not work on parent scenes",
          "arguments": [
            {
              "name": "delta",
              "type": "var"
            }
          ]
        },
        {
          "name": "load_packs",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func load_packs()",
          "description": "",
          "arguments": [

          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "scripts.gd",
      "path": "res://src/velius/scripting/scripts.gd",
      "extends_class": [
        "Node"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class scripts.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [

      ],
      "signals": [

      ],
      "methods": [
        {
          "name": "run",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func run(source_code)",
          "description": "Runs a GDScript, returns what the run function returns\n If there is no run function, it gets created around the given code",
          "arguments": [
            {
              "name": "source_code",
              "type": "var"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    },
    {
      "name": "velius.gd",
      "path": "res://src/velius/velius.gd",
      "extends_class": [
        "Node"
      ],
      "extends_file": "",
      "icon": "",
      "signature": "class velius.gd",
      "description": "",
      "sub_classes": [

      ],
      "constants": [

      ],
      "members": [
        {
          "name": "next",
          "data_type": "var",
          "default_value": null,
          "setter": "set_next",
          "getter": "",
          "export": false,
          "signature": "var next",
          "description": ""
        },
        {
          "name": "json_data",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var json_data",
          "description": ""
        },
        {
          "name": "current_json_path",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var current_json_path",
          "description": ""
        },
        {
          "name": "current_json_location",
          "data_type": "var",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var current_json_location",
          "description": ""
        },
        {
          "name": "current_chapter_id",
          "data_type": "int",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var current_chapter_id: int",
          "description": ""
        },
        {
          "name": "current_dialogue_id",
          "data_type": "int",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var current_dialogue_id: int",
          "description": ""
        },
        {
          "name": "current_location_id",
          "data_type": "int",
          "default_value": null,
          "setter": "",
          "getter": "",
          "export": false,
          "signature": "var current_location_id: int",
          "description": ""
        }
      ],
      "signals": [
        {
          "name": "new_dialogue",
          "arguments": [
            "data"
          ],
          "signature": "signal new_dialogue(data)",
          "description": "Called when a new dialogue is fired\n Returns a Dictionary"
        }
      ],
      "methods": [
        {
          "name": "set_next",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func set_next(new_next: Dictionary) -> null",
          "description": "",
          "arguments": [
            {
              "name": "new_next",
              "type": "Dictionary"
            }
          ]
        },
        {
          "name": "_ready",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func _ready() -> null",
          "description": "",
          "arguments": [

          ]
        },
        {
          "name": "_notification",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func _notification(what) -> null",
          "description": "",
          "arguments": [
            {
              "name": "what",
              "type": "var"
            }
          ]
        },
        {
          "name": "get_dialogue_by_id",
          "return_type": "Dictionary",
          "rpc_mode": 0,
          "signature": "func get_dialogue_by_id(id: int) -> Dictionary",
          "description": "Returns Dictionary containing\n the dialogue's data\n If id not found: returns empty Dictionary",
          "arguments": [
            {
              "name": "id",
              "type": "int"
            }
          ]
        },
        {
          "name": "get_action",
          "return_type": "String",
          "rpc_mode": 0,
          "signature": "func get_action(id: int) -> String",
          "description": "Returns a choice's action string",
          "arguments": [
            {
              "name": "id",
              "type": "int"
            }
          ]
        },
        {
          "name": "start_chapter",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func start_chapter(json_path: String, chapterID: int) -> var",
          "description": "Loads a Mystery's data and theme\n After loading the given chapter will get displayed",
          "arguments": [
            {
              "name": "json_path",
              "type": "String"
            },
            {
              "name": "chapterID",
              "type": "int"
            }
          ]
        },
        {
          "name": "run_dialogue",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func run_dialogue(data: Dictionary) -> null",
          "description": "Runs a dialogue with the given data\n Replaces all '@'-variables with their string value",
          "arguments": [
            {
              "name": "data",
              "type": "Dictionary"
            }
          ]
        },
        {
          "name": "run_location",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func run_location(l: Dictionary) -> null",
          "description": "Run location view\n TODO: Implement",
          "arguments": [
            {
              "name": "l",
              "type": "Dictionary"
            }
          ]
        },
        {
          "name": "go_next",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func go_next() -> null",
          "description": "Jumps to the next dialogue\n TODO: Implement",
          "arguments": [

          ]
        },
        {
          "name": "end",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func end() -> null",
          "description": "Ends the mystery processing",
          "arguments": [

          ]
        },
        {
          "name": "go",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func go(id: int) -> null",
          "description": "Go to current chapter's dialogue with given id",
          "arguments": [
            {
              "name": "id",
              "type": "int"
            }
          ]
        },
        {
          "name": "go_chapter",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func go_chapter(chapter_id: int, dialogue_id = 0) -> null",
          "description": "Switches to chapter with given id\n and directly jumps to given dialogue_id",
          "arguments": [
            {
              "name": "chapter_id",
              "type": "int"
            },
            {
              "name": "dialogue_id",
              "type": "var",
              "default_value": 0
            }
          ]
        },
        {
          "name": "choice_made",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func choice_made(id: int) -> null",
          "description": "Called when player made a choice\n Runs the selected choice's script",
          "arguments": [
            {
              "name": "id",
              "type": "int"
            }
          ]
        },
        {
          "name": "open_side_menu",
          "return_type": "null",
          "rpc_mode": 0,
          "signature": "func open_side_menu() -> null",
          "description": "Opens the side menu",
          "arguments": [

          ]
        },
        {
          "name": "get_mystery_resource_path",
          "return_type": "String",
          "rpc_mode": 0,
          "signature": "func get_mystery_resource_path(relative_path: String) -> String",
          "description": "Returns a mystery resources full virtual path",
          "arguments": [
            {
              "name": "relative_path",
              "type": "String"
            }
          ]
        },
        {
          "name": "mystery_resource_exists",
          "return_type": "bool",
          "rpc_mode": 0,
          "signature": "func mystery_resource_exists(relative_path: String) -> bool",
          "description": "Returns if a mystery resource exists",
          "arguments": [
            {
              "name": "relative_path",
              "type": "String"
            }
          ]
        },
        {
          "name": "png_to_tex",
          "return_type": "ImageTexture",
          "rpc_mode": 0,
          "signature": "func png_to_tex(local_res_path: String) -> ImageTexture",
          "description": "Returns ImageTexture of a given local png path",
          "arguments": [
            {
              "name": "local_res_path",
              "type": "String"
            }
          ]
        },
        {
          "name": "import",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func import(path = \"all\", dlc = false)",
          "description": "Imports the mystery package located at the given path\n If path is not given all packages get imported that are\n located at user://DLC\n The dlc parameter determines if the packages is displayed\n in the dlc or the debug category\n If no arguments are given, all DLC in user://DLC get\n imported as DLC",
          "arguments": [
            {
              "name": "path",
              "type": "var",
              "default_value": "all"
            },
            {
              "name": "dlc",
              "type": "var",
              "default_value": false
            }
          ]
        },
        {
          "name": "erase_from",
          "return_type": "Dictionary",
          "rpc_mode": 0,
          "signature": "func erase_from(dict: Dictionary, from: Dictionary) -> Dictionary",
          "description": "Removes a dictionary's object from a dictionary\n Only works on the first layer (non-recursive)",
          "arguments": [
            {
              "name": "dict",
              "type": "Dictionary"
            },
            {
              "name": "from",
              "type": "Dictionary"
            }
          ]
        },
        {
          "name": "get_key_by_from",
          "return_type": "String",
          "rpc_mode": 0,
          "signature": "func get_key_by_from(dict: Dictionary, from: Dictionary) -> String",
          "description": "Returns the key of a object with in a dictionary that eqals the 'from' dictioanry",
          "arguments": [
            {
              "name": "dict",
              "type": "Dictionary"
            },
            {
              "name": "from",
              "type": "Dictionary"
            }
          ]
        },
        {
          "name": "evaluate_value",
          "return_type": "var",
          "rpc_mode": 0,
          "signature": "func evaluate_value(input: String)",
          "description": "Returns a given string value in its type",
          "arguments": [
            {
              "name": "input",
              "type": "String"
            }
          ]
        }
      ],
      "static_functions": [

      ]
    }
  ]
}